#pragma once

#include "common.h"

#include <boost/math/special_functions/gamma.hpp>
#include <boost/math/special_functions/digamma.hpp>

class FlowField {
  public:  
    float _mean_min_log10;
    float _mean_max_log10;
    int _mean_n_steps;
    float _mean_step;

    float _cv_min_log10;
    float _cv_max_log10;
    int _cv_n_steps;
    float _cv_step;

    // TODO: Don't copy, use smart pointers
    vector<float> _flow_field_unravelled;

    FlowField(
            const vector<float>& mean_grid_def,
            const vector<float>& cv_grid_def,
            const vector<float>& flow_field_unravelled
        ) :
        _flow_field_unravelled(flow_field_unravelled)
        {
            // TODO: Validate arguments, test

            _mean_min_log10 = log10(mean_grid_def[0]);
            _mean_max_log10 = log10(mean_grid_def[1]);
            _mean_n_steps = mean_grid_def[2];
            _mean_step = (_mean_max_log10 - _mean_min_log10) / (_mean_n_steps - 1);

            _cv_min_log10 = log10(cv_grid_def[0]);
            _cv_max_log10 = log10(cv_grid_def[1]);
            _cv_n_steps = cv_grid_def[2];
            _cv_step = (_cv_max_log10 - _cv_min_log10) / (_cv_n_steps - 1);

        }

        // Access a particular element in the grids
        void _entry(int row, int col, float& u, float& v) {
            if ((row < 0) || (row >= _mean_n_steps) || (col < 0) || (col >= _cv_n_steps)) {
                throw out_of_range((boost::format("Flow field entry (%d, %d) out of range.") % row % col).str());
            }

            u = _flow_field_unravelled[_cv_n_steps * row + col];
            v = _flow_field_unravelled[_cv_n_steps * _mean_n_steps + _cv_n_steps * row + col];
        }

        // Interpolate, grid entry given in mean+cv log scale.
        void at(float mean_log10, float cv_log10, float& u, float& v) {
            if (std::isnan(mean_log10) || std::isnan(cv_log10)) {
                throw out_of_range((boost::format("Flow field at (%f, %f) - nan.") % mean_log10 % cv_log10).str());
            }

            float orig_mean_log10 = mean_log10;
            // TODO: Track how much clipping was needed
            // Clip if needed.
            mean_log10 = min(max(mean_log10, _mean_min_log10), _mean_max_log10);
            cv_log10 = min(max(cv_log10, _cv_min_log10), _cv_max_log10);
            
            // Get the four points of interpolation
            float m = (mean_log10 - _mean_min_log10) / _mean_step;
            float c = (cv_log10 - _cv_min_log10) / _cv_step;

            int m0 = int(floor(m));
            if (m0 == _mean_n_steps-1) {
                m0--;
            }
            int m1 = m0 + 1;
            int c0 = int(floor(c));
            if (c0 == _cv_n_steps-1) {
                c0--;
            }
            int c1 = c0 + 1;

            //cout << (boost::format("flow_field->at: %f %f %f %f %f %f %f %f\n") % mean_log10 % cv_log10 % m % m0 % m1 % c % c0 % c1);

            // Fill the four grid points
            float U00, U01, U10, U11;
            float V00, V01, V10, V11;

            try {
                _entry(m0, c0, U00, V00);
                _entry(m0, c1, U01, V01);
                _entry(m1, c0, U10, V10);
                _entry(m1, c1, U11, V11);
            } catch (const std::exception& e) {
                cout << _mean_max_log10 << endl;
                cout << orig_mean_log10 << " -> " << max(orig_mean_log10, _mean_min_log10) << " -> " 
                    << min(max(orig_mean_log10, _mean_min_log10), _mean_max_log10) << endl;
                cout << (boost::format("In: %f %f\n") % mean_log10 % cv_log10);
                cout << (boost::format("%f %f %f %f %f %f\n") % m % m0 % m1 % c % c0 % c1);
                cout << (boost::format("delta %e \n") % (orig_mean_log10-mean_log10));
                cout << (boost::format("Us: %f %f %f %f\n") % U00 % U01 % U10 % U11);
                cout << (boost::format("Vs: %f %f %f %f\n") % V00 % V01 % V10 % V11);
                throw e;
            }

            // cout << (boost::format("Us: %f %f %f %f\n") % U00 % U01 % U10 % U11);
            // cout << (boost::format("Vs: %f %f %f %f\n") % V00 % V01 % V10 % V11);
            

            float w00 = (m1-m) * (c1-c);
            float w01 = (m1-m) * (c-c0);
            float w10 = (m-m0) * (c1-c);
            float w11 = (m-m0) * (c-c0);

            u = w00 * U00 + w01 * U01 + w10 * U10 + w11 * U11;
            v = w00 * V00 + w01 * V01 + w10 * V10 + w11 * V11;
        }

        void at_alpha_beta(float alpha, float beta, float& u, float& v) {
            if ((alpha < 0) || (beta < 0)) {
                throw out_of_range((boost::format("Flow field at_alpha_beta (%f, %f) - negative entry.") % alpha % beta).str());
            }

            float alpha_log10 = log10(alpha); // icsi_log10(alpha, _LOOKUP_TABLE, _log_approx_N);
            float beta_log10 = log10(beta); //icsi_log10(beta, _LOOKUP_TABLE, _log_approx_N);

            at(alpha_log10 - beta_log10, -0.5 * alpha_log10, u, v);
        }

        void at_log10_alpha_beta(float alpha_log10, float beta_log10, float& u, float& v) {
            at(alpha_log10 - beta_log10, -0.5 * alpha_log10, u, v);
        }

    
};


//
// n_steps here are n_steps of flow field step for 'missing'
// and for 'hom' it's intertwined with hom observation update
//

inline int ftoi_sse1(float f)
{
    return _mm_cvtt_ss2si(_mm_load_ss(&f));     // SSE1 instructions for float->int
}

class FlowFieldCache {
  public:

    float _scaled_recombination_rate;
    float _scaled_mutation_rate;
    unique_ptr<FlowField> _flow_field;
    int _n_steps;

    bool _entropy_clipping;

    vector<float> _cached_missing_unravelled;
    vector<float> _cached_hom_unravelled;
    vector<float> _cached_hom_stretch_hom_site_unravelled;
    vector<float> _cached_hom_stretch_het_site_unravelled;
    vector<float> _cached_hom_site_hom_stretch_unravelled;
    vector<float> _cached_het_site_hom_stretch_unravelled;

    float* _cached_missing_flat;
    float* _cached_hom_flat;
    float* _cached_hom_stretch_hom_site_flat;
    float* _cached_hom_stretch_het_site_flat;
    float* _cached_hom_site_hom_stretch_flat;
    float* _cached_het_site_hom_stretch_flat;

    float _mean_min_log10;
    float _mean_max_log10;
    int _mean_n_steps;
    float _mean_step;

    float _mean_step_recip;

    float _cv_min_log10;
    float _cv_max_log10;
    int _cv_n_steps;
    float _cv_step;

    float _cv_step_recip;

    float _min_alpha;
    float _min_beta;

    bool _log_coords;

    // Interval variables
    float _m, _c; 
    int _m0, _c0;
    float* _lookup_forward[4];
    float* _lookup_backward[4];
    float* _flat;
    float* _ptr;
    float _U00, _U01, _U10, _U11, _V00, _V01, _V10, _V11;
    float _wm, _wc, _w00, _w01, _w10, _w11;

    __m256 _mean_step_recip_v;
    __m256 _mean_min_log10_times_mean_step_recip_v;
    __m256 _cv_step_recip_v;
    __m256 _cv_min_log10_times_cv_step_recip_v;

    __m256i _shift_n_step_coef;
    __m256i _shift_m0_coef;
    __m256i _shift_c0_coef;

    __m256 _wm_v;
    __m256 _wm_mult;
    __m256 _wm_add;

    __m256 _wc_v;
    __m256 _wc_mult;
    __m256 _wc_add;

    __m256 _wmvec;
    __m256 _wcvec;
    __m256 _halfdots;

    vector<double> _unit_entropy_cv_per_mean;
    float _unit_entropy_cv_per_mean_step_size;

    FlowFieldCache(
        float scaled_recombination_rate,
        float scaled_mutation_rate,
        unique_ptr<FlowField> flow_field,
        int n_steps,
        bool entropy_clipping = true,
        bool log_coords = true
    ) : 
        _scaled_recombination_rate(scaled_recombination_rate),
        _scaled_mutation_rate(scaled_mutation_rate), 
        _flow_field(move(flow_field)),
        _n_steps(n_steps),
        _entropy_clipping(entropy_clipping),
        _mean_min_log10(_flow_field->_mean_min_log10),
        _mean_max_log10(_flow_field->_mean_max_log10),
        _mean_n_steps(_flow_field->_mean_n_steps),
        _mean_step(_flow_field->_mean_step),
        _mean_step_recip(1.0 / _mean_step),
        _cv_min_log10(_flow_field->_cv_min_log10),
        _cv_max_log10(_flow_field->_cv_max_log10),
        _cv_n_steps(_flow_field->_cv_n_steps),
        _cv_step(_flow_field->_cv_step),
        _cv_step_recip(1.0 / _cv_step),
        _min_alpha(0),
        _min_beta(-10),
        _log_coords(log_coords),
        _unit_entropy_cv_per_mean(
            {0.0, -0.016697146501201132, -0.023784547125842437, -0.029293011244817535, -0.033984993561944066, -0.0381557259231613, -0.041956572748631515, -0.04547742310364811, -0.04877682634401026, -0.051895438297151486, -0.05486285098754706, -0.057701397037135393, -0.06042842124884373, -0.06305771272423044, -0.06560044811180887, -0.06806583568618407, -0.07046156862656971, -0.07279415235984743, -0.07506914624059391, -0.07729134546821115, -0.07946492037376629, -0.08159352468396719, -0.08368038080220686, -0.08572834780920857, -0.08773997627827157, -0.08971755289280736, -0.09166313710579743, -0.09357859149190517, -0.09546560710191443, -0.09732572474717927, -0.09916035300989279, -0.10097078358626277, -0.10275820439915151, -0.10452371087808388, -0.10626831572494666, -0.10799295738593173, -0.1096985074298118, -0.11138577703263763, -0.11305552265525876, -0.11470845106600791, -0.1163452237835827, -0.11796646101288388, -0.11957274516703364, -0.12116462400285855, -0.12274261343122816, -0.12430720004317664, -0.12585884338136566, -0.12739797799781627, -0.12892501530473055, -0.1304403452547831, -0.13194433788271454, -0.133437344683216, -0.1349196998842217, -0.13639172161106217, -0.13785371294602555, -0.13930596289924324, -0.14074874729999465, -0.1421823296357161, -0.14360696178187027, -0.1450228847318158, -0.14643032921298982, -0.14782951630991192, -0.14922065799851225, -0.15060395767363843, -0.15197961061517162, -0.15334780443822638, -0.15470871950242326, -0.1560625292961504, -0.157409400802635, -0.15874949482054035, -0.1600829662936576, -0.16140996459057533, -0.16273063379117048, -0.16404511293217183, -0.1653535362618186, -0.16665603345131785, -0.16795272981994458, -0.16924374653740415, -0.17052920080345757, -0.17180920602754668, -0.1730838720061456, -0.1743533050705537, -0.17561760824378325, -0.17687688137471014, -0.17813122128586656, -0.179380721878033, -0.18062547427348363, -0.18186556691603073, -0.18310108568016403, -0.18433211397791638, -0.18555873284981317, -0.18678102106491679, -0.18799905520268112, -0.1892129097348061, -0.1904226571161871, -0.19162836784175852, -0.19283011053744303, -0.19402795201472145, -0.19522195734793968, -0.19641218992205722, -0.1975987115076805, -0.19878158230881127, -0.19996086101969013, -0.20113660487254492, -0.20230886969898165, -0.20347770996409054, -0.20464317882101568, -0.20580532814506114, -0.20696420859053433, -0.20811986961575712, -0.20927235953081436, -0.21042172552711236, -0.21156801372057998, -0.21271126918122718, -0.21385153596270357, -0.2149888571386782, -0.21612327483467197, -0.21725483024624737, -0.21838356367993583, -0.2195095145691539, -0.220632721510583, -0.22175322227553806, -0.22287105384407369, -0.2239862524277214, -0.2250988534831322, -0.22620889174390868, -0.22731640123197394, -0.22842141528485627, -0.2295239665693316, -0.23062408709961346, -0.231721808262364, -0.23281716082578896, -0.23391017495782762, -0.23500088024661636, -0.23608930570958364, -0.23717547981618736, -0.2382594304901886, -0.2393411851392102, -0.24042077065246303, -0.2414982134280308, -0.2425735393751438, -0.24364677393009515, -0.24471794206760933, -0.2457870683190322, -0.24685417676778343, -0.24791929107209398, -0.24898243447864843, -0.25004362982031125, -0.2511028995365905, -0.2521602656736377, -0.2532157499024379, -0.254269373523357, -0.25532115747523676, -0.2563711223444898, -0.25741928837192063, -0.25846567546182087, -0.25951030318651647, -0.260553190802284, -0.2615943572470769, -0.2626338211473467, -0.2636716008385065, -0.2647077143512888, -0.2657421794367565, -0.26677501356175526, -0.267806233915735, -0.26883585742211835, -0.26986390073602706, -0.2708903802624718, -0.2719153121472573, -0.2729387122906246, -0.2739605963517988, -0.27498097974898883, -0.27599987767530365, -0.2770173050919311, -0.27803327673495914, -0.2790478071290181, -0.2800609105804597, -0.281072601184178, -0.2820828928372521, -0.2830917992253035, -0.28409933384523356, -0.2851055099961286, -0.28611034079062847, -0.28711383915265287, -0.28811601782194884, -0.28911688936545943, -0.2901164661727762, -0.29111476045613927, -0.2921117842640797, -0.29310754947914575, -0.29410206781790293, -0.2950953508445764, -0.2960874099596822, -0.29707825641139607, -0.29806790130010086, -0.29905635557611276, -0.30004363004422885, -0.30102973536600075, -0.30201468206200843, -0.3029984805209551, -0.30398114098829865, -0.30496267358216755, -0.30594308828881367, -0.3069223949626121, -0.30790060333742986, -0.30887772301980476, -0.3098537634980403, -0.31082873413538437, -0.3118026441836719, -0.31277550277195587, -0.3137473189269713, -0.3147181015503975, -0.31568785944386946, -0.31665660129533535, -0.3176243356926989, -0.3185910711147244, -0.3195568159378581, -0.3205215784385018, -0.3214853667952866, -0.3224481890867992, -0.3234100532938555, -0.32437096730859594, -0.32533093892539, -0.3262899758499316, -0.3272480856924176, -0.3282052759811904, -0.3291615541513693, -0.33011692755849253, -0.3310714034694229, -0.33202498906916844, -0.3329776914563354, -0.33392951765677026, -0.33488047460991766, -0.33583056918018883, -0.33677980815696174, -0.33772819825003353, -0.33867574609416806, -0.33962245825364334, -0.3405683412199778, -0.3415134014096566, -0.3424576451732264, -0.3434010787884745, -0.3443437084672496, -0.3452855403531885, -0.34622658052398947, -0.34716683499141254, -0.34810630970355305, -0.349045010542568, -0.3499829433337709, -0.350920113836537, -0.35185652774657683, -0.35279219070730505, -0.35372710829847165, -0.35466128604070946, -0.35559472940008163, -0.3565274437835342, -0.35745943454571716, -0.3583907069844372, -0.3593212663383838, -0.3602511178030454, -0.36118026651024593, -0.3621087175486082, -0.3630364759476379, -0.36396354669591346, -0.3648899347206225, -0.36581564491029894, -0.3667406820943597, -0.3676650510658419, -0.36858875656093915, -0.36951180327491784, -0.37043419585074844, -0.3713559388950216, -0.37227703695975833, -0.3731974945605998, -0.374117316163165, -0.37503650619669315, -0.3759550690404012, -0.37687300903940013, -0.37779033048877864, -0.3787070376495194, -0.3796231347394041, -0.3805386259352872, -0.38145351537536953, -0.38236780716147223, -0.38328150535676286, -0.3841946139789343, -0.3851071370183945, -0.3860190784223505, -0.386930442106177, -0.38784123194204767, -0.38875145177257764, -0.3896611054017285, -0.39057019660390324, -0.39147872911257764, -0.39238670663166886, -0.3932941328287143, -0.3942010113416927, -0.3951073457722032, -0.39601313969228613, -0.3969183966376022, -0.3978231201210747, -0.3987273136146996, -0.3996309805677356, -0.40053412439078784, -0.4014367484694503, -0.402338856164306, -0.4032404507950105, -0.40414153566075584, -0.4050421140289018, -0.4059421891417969, -0.40684176420995755, -0.4077408424166151, -0.40863942691771626, -0.4095375208464702, -0.4104351273019802, -0.4113322493628857, -0.4122288900782678, -0.41312505247219633, -0.4140207395460038, -0.4149159542691905, -0.41581069959534034, -0.4167049784439314, -0.41759879371625175, -0.4184921482885784, -0.4193850450099035, -0.42027748670875553, -0.4211694761909257, -0.4220610162349203, -0.4229521096033295, -0.42384275902691115, -0.42473296722278064, -0.42562273687849483, -0.42651207066796815, -0.4274009712355564, -0.4282894412074256, -0.4291774831915518, -0.43006509976862617, -0.4309522935056975, -0.4318390669402561, -0.43272542260069713, -0.43361136298585734, -0.434496890580931, -0.43538200784610126, -0.4362667172279089, -0.4371510211456098, -0.4380349220093649, -0.4389184222043241, -0.4398015240974473, -0.4406842300375047, -0.44156654235735004, -0.4424484633671, -0.44332999536095485, -0.4442111406217464, -0.4450919014027477, -0.44597227995041067, -0.4468522784884499, -0.4477318992246637, -0.4486111443509344, -0.4494900160409543, -0.45036851645477327, -0.45124664773197765, -0.4521244119985113, -0.4530018113644019, -0.453878847923761, -0.454755523754784, -0.45563184091747644, -0.45650780146274883, -0.4573834074210481, -0.458258660806905, -0.4591335636234817, -0.4600081178602977, -0.46088232548413544, -0.4617561884595034, -0.46262970872589904, -0.46350288821145114, -0.4643757288351935, -0.4652482324934226, -0.4661204010801612, -0.46699223646214705, -0.4678637405038444, -0.4687349150492537, -0.46960576193555426, -0.470476282977188, -0.4713464799885969, -0.472216354756938, -0.4730859090670947, -0.4739551446880341, -0.47482406337280736, -0.47569266686991796, -0.47656095690740585, -0.47742893520421603, -0.4782966034679248, -0.47916396339246603, -0.48003101666267867, -0.4808977649497592, -0.4817642099135355, -0.482630353200193, -0.48349619644682207, -0.48436174127914455, -0.4852269893092398, -0.4860919421446397, -0.4869566013724125, -0.48782096857507895, -0.48868504532151746, -0.48954883317151143, -0.4904123336734756, -0.4912755483667297, -0.49213847877695116, -0.4930011264229961, -0.4938634928078045, -0.49472557943204265, -0.49558738778046063, -0.4964489193287136, -0.49731017554336177, -0.4981711578818704, -0.4990318677926098, -0.4998923067080341, -0.5007524760605975, -0.5016123772668379, -0.5024720117341985, -0.5033313808633011, -0.5041904860456725, -0.5050493286569235, -0.5059079100726649, -0.5067662316571386, -0.5076242947609444, -0.5084821007278606, -0.5093396508993919, -0.5101969465965794, -0.5110539891427379, -0.511910779845266, -0.5127673200070149, -0.5136236109217407, -0.5144796538741048, -0.5153354501373997, -0.516191000984918, -0.5170463076717624, -0.5179013714530356, -0.5187561935747453, -0.5196107752669832, -0.5204651177621145, -0.5213192222811358, -0.5221730900336752, -0.5230267222248131, -0.5238801200528087, -0.5247332847091002, -0.5255862173714831, -0.526438919220027, -0.5272913914166111, -0.5281436351253888, -0.528995651494597, -0.5298474416747467, -0.5306990068004325, -0.5315503480039752, -0.5324014664108745, -0.5332523631375352, -0.5341030392912671, -0.53495349597938, -0.5358037342955413, -0.5366537553334183, -0.5375035601707623, -0.5383531498875982, -0.5392025255525823, -0.5400516882298234, -0.5409006389743354, -0.5417493788365846, -0.5425979088624899, -0.5434462300888754, -0.5442943435457437, -0.5451422502562764, -0.545989951243655, -0.5468374475196924, -0.5476847400871065, -0.5485318299486153, -0.5493787181001153, -0.5502254055261346, -0.551071893213475, -0.5519181821352959, -0.5527642732647564, -0.5536101675659211, -0.5544558659983068, -0.5553013695123354, -0.5561466790607028, -0.5569917955824621, -0.5578367200166667, -0.5586814532910012, -0.5595259963354238, -0.5603703500662505, -0.5612145153997972, -0.5620584932455586, -0.5629022845062082, -0.5637458900844194, -0.5645893108692235, -0.5654325477496513, -0.5662756016101866, -0.5671184733284917, -0.5679611637776816, -0.5688036738263236, -0.5696460043338902, -0.5704881561621278, -0.5713301301614138, -0.572171927179852, -0.5730135480609988, -0.573854993643863, -0.5746962647606324, -0.575537362238947, -0.5763782869064471, -0.5772190395771304, -0.5780596210718159, -0.5789000321931326, -0.5797402737528046, -0.5805803465466397, -0.5814202513749933, -0.5822599890245783, -0.5830995602866551, -0.5839389659433891, -0.5847782067723983, -0.5856172835467532, -0.5864561970372506, -0.587294948007866, -0.5881335372203012, -0.5889719654294368, -0.5898102333924271, -0.5906483418527841, -0.5914862915585672, -0.5923240832464671, -0.5931617176531745, -0.5939991955108326, -0.5948365175470371, -0.5956736844848365, -0.5965106970450051, -0.5973475559437702, -0.5981842618905375, -0.599020815594713, -0.599857217761155, -0.6006934690879007, -0.6015295702707135, -0.602365522005357, -0.6032013249784995, -0.604036979874536, -0.6048724873755873, -0.6057078481569533, -0.6065430628962076, -0.6073781322595551, -0.6082130569154742, -0.6090478375278963, -0.6098824747539311, -0.6107169692506886, -0.6115513216684576, -0.6123855326575267, -0.6132196028636372, -0.6140535329257091, -0.6148873234849361, -0.6157209751756909, -0.6165544886277985, -0.617387864471084, -0.6182211033285512, -0.619054205823204, -0.6198871725712252, -0.6207200041887972, -0.6215527012875555, -0.6223852644745875, -0.6232176943569812, -0.6240499915350028, -0.6248821566066454, -0.6257141901699015, -0.626546092813669, -0.6273778651291195, -0.6282095077028771, -0.6290410211170183, -0.6298724059536198, -0.6307036627856633, -0.6315347921906778, -0.6323657947370975, -0.6331966709956305, -0.6340274215278896, -0.6348580469000353, -0.6356885476668594, -0.6365189243854275, -0.6373491776128049, -0.6381793078946885, -0.6390093157813226, -0.639839201818404, -0.6406689665448084, -0.6414986105016851, -0.6423281342233622, -0.6431575382464416, -0.643986823100704, -0.6448159893136562, -0.6456450374105316, -0.6464739679165632, -0.6473027813478893, -0.6481314782251957, -0.648960059060073, -0.6497885243663859, -0.650616874655725, -0.6514451104305863, -0.6522732322002867, -0.6531012404627745, -0.6539291357182719, -0.6547569184647273, -0.6555845891932677, -0.6564121483995677, -0.6572395965702071, -0.6580669341917655, -0.6588941617508226, -0.6597212797271368, -0.6605482886027403, -0.6613751888505703, -0.6622019809458379, -0.663028665363754, -0.6638552425749822, -0.6646817130410909, -0.6655080772327437, -0.6663343356115092, -0.6671604886366822, -0.6679865367675575, -0.6688124804588824, -0.6696383201654044, -0.6704640563373232, -0.6712896894271125, -0.672115219878151, -0.6729406481383648, -0.6737659746465852, -0.6745911998461906, -0.6754163241737388, -0.676241348065787, -0.677066271956619, -0.6778910962782447, -0.6787158214604005, -0.6795404479282752, -0.6803649761093311, -0.6811894064264834, -0.6820137393026471, -0.682837975153916, -0.6836621144009314, -0.6844861574552397, -0.6853101047306609, -0.6861339566410152, -0.6869577135933014, -0.6877813759945184, -0.6886049442493913, -0.6894284187626454, -0.6902517999344582, -0.6910750881650074, -0.6918982838499232, -0.6927213873848359, -0.6935443991653756, -0.6943673195803512, -0.6951901490208456, -0.6960128878756677, -0.696835536529079, -0.6976580953653411, -0.6984805647664416, -0.6993029451166421, -0.7001252367888355, -0.7009474401627358, -0.7017695556112358, -0.7025915835117758, -0.7034135242327011, -0.7042353781423571, -0.705057145611363, -0.7058788270035166, -0.7067004226871632, -0.7075219330192795, -0.7083433583659371, -0.709164699081839, -0.7099859555285093, -0.7108071280583772, -0.7116282170284194, -0.7124492227887913, -0.7132701456919222, -0.7140909860856937, -0.7149117443179875, -0.7157324207344118, -0.7165530156783007, -0.7173735294952621, -0.718193962524083, -0.71901431510355, -0.7198345875724499, -0.7206547802672958, -0.7214748935200532, -0.7222949276672352, -0.7231148830385337, -0.723934759965914, -0.7247545587745208, -0.7255742797917719, -0.7263939233450856, -0.7272134897573324, -0.7280329793491092, -0.7288523924432866, -0.7296717293604615, -0.7304909904144097, -0.7313101759257279, -0.7321292862059181, -0.732948321568756, -0.7337672823280172, -0.73458616879293, -0.7354049812749963, -0.7362237200788968, -0.737042385511586, -0.7378609778777445, -0.7386794974820532, -0.7394979446246452, -0.7403163196079277, -0.7411346227297599, -0.7419528542902754, -0.7427710145850597, -0.7435891039074249, -0.7444071225506832, -0.745225070812694, -0.7460429489776743, -0.74686075734121, -0.7476784961875182, -0.7484961658053635, -0.7493137664812366, -0.7501312984993547, -0.7509487621439348, -0.7517661576946466, -0.7525834854334335, -0.7534007456376912, -0.7542179385893633, -0.755035064561298, -0.755852123833165, -0.756669116675539, -0.7574860433635422, -0.7583029041700229, -0.759119699363282, -0.7599364292138944, -0.7607530939901608, -0.7615696939581085, -0.7623862293860384, -0.7632027005354303, -0.7640191076700376, -0.7648354510558875, -0.7656517309499122, -0.7664679476113179, -0.7672841013038578, -0.7681001922799169, -0.768916220798701, -0.7697321871148688, -0.7705480914808049, -0.7713639341534417, -0.7721797153806165, -0.7729954354147139, -0.7738110945035714, -0.7746266928995738, -0.7754422308482845, -0.7762577085929934, -0.7770731263815378, -0.7778884844594813, -0.77870378306784, -0.77951902244763, -0.7803342028421412, -0.781149324487842, -0.7819643876257487, -0.7827793924946036, -0.7835943393286016, -0.7844092283642112, -0.7852240598356275, -0.7860388339747715, -0.7868535510181118, -0.787668211195296, -0.7884828147359713, -0.7892973618675114, -0.7901118528218376, -0.7909262878263235, -0.7917406671037952, -0.7925549908816265, -0.793369259387191, -0.7941834728387676, -0.794997631461456, -0.7958117354758087, -0.7966257851023784, -0.7974397805594435, -0.7982537220698305, -0.7990676098472704, -0.7998814441077684, -0.8006952250696031, -0.8015089529487796, -0.8023226279544815, -0.8031362503004402, -0.8039498202026607, -0.804763337868053, -0.8055768035080746, -0.8063902173319093, -0.8072035795487409, -0.8080168903632057, -0.8088301499844874, -0.8096433586172225, -0.8104565164660471, -0.8112696237355976, -0.8120826806259629, -0.8128956873417792, -0.8137086440854091, -0.814521551052394, -0.8153344084473702, -0.8161472164636052, -0.8169599753034618, -0.8177726851624811, -0.818585346233931, -0.8193979587179001, -0.8202105228031087, -0.8210230386873718, -0.8218355065616834, -0.8226479266170372, -0.8234602990444273, -0.8242726240348475, -0.8250849017792916, -0.8258971324642062, -0.8267093162760375, -0.8275214534057795, -0.8283335440353312, -0.8291455883511389, -0.8299575865396491, -0.8307695387827607, -0.8315814452623727, -0.8323933061626576, -0.8332051216655145, -0.8340168919505686, -0.834828617197445, -0.8356402975834953, -0.8364519332906184, -0.837263524493892, -0.8380750713706675, -0.8388865740982965, -0.8396980328495829, -0.8405094477996045, -0.8413208191234389, -0.8421321469938903, -0.8429434315837625, -0.8437546730613121, -0.8445658716016169, -0.8453770273729333, -0.8461881405435179, -0.8469992112861746, -0.8478102397646126, -0.8486212261470882, -0.8494321705995844, -0.8502430732903576, -0.8510539343831169, -0.8518647540438451, -0.8526755324317037, -0.8534862697149492, -0.854296966055017, -0.8551076216110687, -0.8559182365468132, -0.8567288110191384, -0.8575393451917535, -0.8583498392215461, -0.8591602932676778, -0.8599707074847629, -0.8607810820365103, -0.8615914170707129, -0.8624017127510797, -0.8632119692276774, -0.8640221866551201, -0.8648323651902956, -0.8656425049832706, -0.8664526061863853, -0.867262668954254, -0.8680726934346694, -0.8688826797822458, -0.8696926281425021, -0.8705025386677789, -0.871312411505869, -0.8721222468022916, -0.8729320447093869, -0.8737418053704005, -0.8745515289331252, -0.8753612155430801, -0.8761708653435107, -0.8769804784799362, -0.8777900550956019, -0.878599595336027, -0.8794090993421833, -0.8802185672550422, -0.8810279992155756, -0.8818373953693026, -0.8826467558503737, -0.8834560808020342, -0.8842653703629821, -0.8850746246719154, -0.8858838438652583, -0.886693028079435, -0.887502177455417, -0.888311292127355, -0.8891203722293994, -0.8899294178979744, -0.8907384292672305, -0.891547406471318, -0.8923563496421139, -0.8931652589160421, -0.8939741344227059, -0.8947829762962556, -0.8955917846662942, -0.8964005596624247, -0.8972093014142501, -0.898018010055921, -0.8988266857124927, -0.8996353285135683, -0.9004439385887508, -0.9012525160630958, -0.9020610610639324, -0.9028695737185899, -0.9036780541543976, -0.9044865024941373, -0.9052949188628645, -0.9061033033856347, -0.9069116561897772, -0.9077199773912525, -0.9085282671196637, -0.9093365254955188, -0.9101447526393258, -0.9109529486715928, -0.9117611137173753, -0.9125692478926339, -0.9133773513201504, -0.9141854241181591, -0.9149934664048942, -0.9158014783008639, -0.9166094599220287, -0.9174174113866229, -0.9182253328106071, -0.9190332243122157, -0.9198410860074091, -0.9206489180098743, -0.9214567204355717, -0.922264493400462, -0.9230722370159583, -0.9238799514002949, -0.9246876366603374, -0.9254952929143201, -0.9263029202736561, -0.9271105188474849, -0.9279180887494931, -0.9287256300888203, -0.9295331429791531, -0.9303406275273574, -0.931148083844846, -0.9319555120384848, -0.9327629122196868, -0.9335702844953175, -0.9343776289745165, -0.9351849457618755, -0.9359922349665339, -0.9367994966953574, -0.9376067310552116, -0.9384139381484147, -0.9392211180818322, -0.9400282709623298, -0.9408353968922256, -0.9416424959738379, -0.9424495683163059, -0.9432566140151266, -0.9440636331794394, -0.9448706259092887, -0.9456775923069927, -0.9464845324703219, -0.9472914465061422, -0.948098334512224, -0.9489051965886119, -0.9497120328376241, -0.9505188433547573, -0.9513256282423299, -0.9521323875958387, -0.952939121517602, -0.9537458301031165, -0.9545525134501531, -0.9553591716542087, -0.9561658048153276, -0.9569724130267332, -0.957778996386196, -0.958585554989213, -0.9593920889290075, -0.9601985983033501, -0.961005083205464, -0.9618115437285724, -0.9626179799658985, -0.9634243920129393, -0.9642307799583705, -0.9650371438999628, -0.9658434839263919, -0.966649800130881, -0.9674560926066533, -0.9682623614401109, -0.9690686067244769, -0.9698748285507008, -0.9706810270074584, -0.9714872021856991, -0.9722933541740986, -0.9730994830590589, -0.9739055889338033, -0.97471167188246, -0.9755177319959785, -0.9763237693607607, -0.9771297840632087, -0.9779357761897245, -0.9787417458289838, -0.9795476930651148, -0.9803536179822459, -0.9811595206713264, -0.9819654012119372, -0.9827712596904803, -0.9835770961933576, -0.9843829108024238, -0.9851887036040807, -0.9859944746779092, -0.9868002241080376, -0.987605951978594, -0.9884116583714331, -0.9892173433684093, -0.9900230070536509, -0.9908286495044649, -0.9916342708027059, -0.9924398710325022, -0.9932454502711607, -0.9940510086005361, -0.994856546100209, -0.9956620628474866, -0.9964675589242233, -0.99727303441, -0.99807848937985, -0.9988839239156277, -0.9996893380923666, -1.0004947319896473, -1.001300105684777, -1.002105459252789, -1.002910792773264, -1.0037161063212352, -1.00452139997401, -1.0053266738043476, -1.0061319278895553, -1.00693716230694, -1.0077423771269878, -1.0085475724292792, -1.0093527482843, -1.0101579047693576, -1.0109630419549376, -1.011768159918347, -1.012573258727798, -1.0133783384605977, -1.014183399184958, -1.0149884409781862, -1.015793463910768, -1.0165984680509155, -1.0174034534759357, -1.0182084202517672, -1.019013368453443, -1.0198182981491755, -1.0206232094094503, -1.0214281023047533, -1.0222329769032967, -1.02303783327784, -1.0238426714965954, -1.0246474916277748, -1.0254522937395905, -1.0262570779025282, -1.0270618441825263, -1.027866592647797, -1.0286713233665523, -1.0294760364070044, -1.0302807318350915, -1.0310854097190258, -1.0318900701247458, -1.0326947131181896, -1.0334993387652958, -1.0343039471297288, -1.0351085382819747, -1.035913112285698, -1.0367176692045632, -1.0375222091022351, -1.0383267320469258, -1.0391312381000262, -1.0399357273252008, -1.040740199788388, -1.0415446555532526, -1.0423490946811853, -1.0431535172381246, -1.0439579232831875, -1.0447623128800387, -1.045566686092343, -1.046371042981491, -1.0471753836088737, -1.0479797080358821, -1.0487840163261808, -1.0495883085366131, -1.0503925847331175, -1.0511968449725373, -1.0520010893162635, -1.0528053178256869, -1.053609530557651, -1.0544137275758203, -1.0552179089370384, -1.056022074702696, -1.0568262249296367, -1.0576303596769776, -1.058434479001562, -1.0592385829670548, -1.0600426716257516, -1.0608467450413173, -1.061650803263774, -1.06245484635906, -1.0632588743771976, -1.0640628873795777, -1.06486688542077, -1.0656708685576177, -1.0664748368492383, -1.0672787903456538, -1.0680827291105288, -1.068886653191612, -1.069690562650294, -1.0704944575388708, -1.071298337914186, -1.0721022038285355, -1.0729060553387626, -1.073709892499437, -1.0745137153628548, -1.0753175239835855, -1.076121318413925, -1.0769250987129908, -1.0777288649262573, -1.0785326171128418, -1.0793363553250401, -1.0801400796128746, -1.0809437900286412, -1.0817474866269094, -1.0825511694599754, -1.083354838580135, -1.0841584940351368, -1.0849621358795503, -1.0857657641656715, -1.086569378941249, -1.0873729802608523, -1.0881765681745037, -1.0889801427299517, -1.0897837039794922, -1.0905872519731474, -1.0913907867586659, -1.0921943083906172, -1.092997816914476, -1.0938013123825385, -1.0946047948402793, -1.0954082643399943, -1.096211720929432, -1.0970151646563409, -1.0978185955707431, -1.0986220137203873, -1.099425419150748, -1.1002288119141213, -1.101032192053708, -1.1018355596218044, -1.1026389146616111, -1.1034422572208769, -1.10424558734735, -1.105048905088779, -1.1058522104906388, -1.1066555036006775, -1.1074587844620964, -1.1082620531249177, -1.1090653096300684, -1.109868554027571, -1.1106717863629, -1.1114750066792567, -1.1122782150221155, -1.1130814114369514, -1.1138845959669652, -1.1146877686599055, -1.1154909295589732, -1.1162940787073694, -1.1170972161528425, -1.117900341934046, -1.1187034560964548, -1.1195065586878172, -1.1203096497467868, -1.1211127293165646, -1.121915797444899, -1.1227188541704436, -1.123521899538673, -1.124324933588241, -1.1251279563668959, -1.125930967915565, -1.1267339682729016, -1.1275369574843808, -1.1283399355886559, -1.1291429026312017, -1.1299458586529454, -1.1307488036925406, -1.1315517377931883, -1.1323546609958157, -1.1331575733413501, -1.1339604748707188, -1.1347633656225753, -1.1355662456378468, -1.1363691149597344, -1.1371719736246177, -1.137974821675698, -1.1387776591493548, -1.1395804860887893, -1.1403833025303811, -1.1411861085173314, -1.141988904083746, -1.1427916892728263, -1.1435944641209517, -1.1443972286667758, -1.145199982951226, -1.1460027270129558, -1.1468054608860712, -1.1476081846137731, -1.1484108982324415, -1.1492136017761823, -1.1500162952881965, -1.1508189788025902, -1.151621652358017, -1.1524243159931302, -1.153226969742036, -1.154029613643388, -1.1548322477358397, -1.155634872053497, -1.1564374866327398, -1.1572400915099479, -1.1580426867260485, -1.1588452723106002, -1.1596478483045303, -1.160450414739671, -1.1612529716569497, -1.1620555190881987, -1.1628580570697977, -1.1636605856358528, -1.1644631048227438, -1.1652656146668505, -1.166068115202279, -1.1668706064631351, -1.1676730884835251, -1.1684755612998288, -1.169278024946152, -1.1700804794543274, -1.1708829248630082, -1.171685361201753, -1.1724877885069418, -1.1732902068126805, -1.1740926161508014, -1.1748950165554106, -1.1756974080606142, -1.1764997906982444, -1.1773021645024073, -1.178104529507209, -1.1789068857444818, -1.1797092332483317, -1.1805115720483172, -1.1813139021785446, -1.1821162236731197, -1.1829185365616013, -1.1837208408780953, -1.1845231366521602, -1.185325423920176, -1.1861277027094275, -1.1869299730517469, -1.187732234983514, -1.18853448852974, -1.1893367337268046, -1.1901389706042664, -1.190941199191684, -1.1917434195208898, -1.192545631623716, -1.1933478355297211, -1.1941500312707376, -1.194952218876324, -1.1957543983760388, -1.1965565698017144, -1.1973587331829094, -1.1981608885491823, -1.1989630359300918, -1.19976517535747, -1.2005673068608758, -1.20136943046532, -1.2021715462071825, -1.2029736541092007, -1.2037757542054806, -1.204577846523307, -1.2053799310922386, -1.2061820079395602, -1.2069840770948304, -1.2077861385876076, -1.2085881924474506, -1.2093902386993705, -1.2101922773729257, -1.2109943084999486, -1.2117963321031766, -1.212598348214442, -1.2134003568610296, -1.2142023580702244, -1.215004351869311, -1.2158063382855744, -1.216608317348573, -1.2174102890833183, -1.2182122535193685, -1.2190142106840085, -1.2198161605999758, -1.2206181032991026, -1.2214200388064, -1.222221967149153, -1.2230238883546463, -1.223825802447891, -1.224627709456172, -1.225429609406774, -1.2262315023224346, -1.227033388234986, -1.2278352671648918, -1.2286371391417106, -1.2294390041927272, -1.2302408623384053, -1.2310427136083035, -1.2318445580274329, -1.2326463956208045, -1.2334482264157032, -1.2342500504348664, -1.235051867703305, -1.2358536782483043, -1.236655482094875, -1.2374572792657546, -1.2382590697882279, -1.2390608536850323, -1.2398626309811789, -1.2406644017016788, -1.2414661658738169, -1.242267923515783, -1.2430696746571357, -1.2438714193206124, -1.2446731575289505, -1.245474889307161, -1.246276614680255, -1.2470783336686964, -1.2478800463020434, -1.2486817525984861, -1.2494834525830356, -1.250285146280703, -1.2510868337142256, -1.251888514904067, -1.2526901898775122, -1.2534918586572985, -1.2542935212638895, -1.2550951777222963, -1.2558968280552563, -1.256698472283233, -1.2575001104312378, -1.2583017425220078, -1.2591033685782804, -1.2599049886205194, -1.260706602671462, -1.2615082107561193, -1.2623098128926813, -1.263111409106159, -1.2639129994170162, -1.2647145838502638, -1.265516162421818, -1.2663177351589638, -1.2671193020821647, -1.2679208632118844, -1.2687224185685864, -1.2695239681750081, -1.2703255120561607, -1.2711270502256866, -1.2719285827108706, -1.2727301095321764, -1.2735316307077937, -1.2743331462604601, -1.2751346562106392, -1.2759361605810682, -1.276737659389937, -1.2775391526577096, -1.278340640407123, -1.2791421226586408, -1.279943599430453, -1.2807450707430235, -1.2815465366190892, -1.282347997079114, -1.283149452139014, -1.2839509018215267, -1.2847523461493893, -1.2855537851362442, -1.2863552188071026, -1.2871566471801543, -1.2879580702735893, -1.288759488110145, -1.2895609007057374, -1.290362308083104, -1.2911637102581608, -1.2919651072536453, -1.2927664990877474, -1.2935678857763833, -1.294369267344564, -1.2951706438059318, -1.2959720151832244, -1.2967733814923577, -1.297574742756069, -1.298376098988001, -1.299177450210891, -1.299978796440655, -1.3007801376977568, -1.3015814740003862, -1.3023828053644593, -1.3031841318127135, -1.3039854533587913, -1.30478677002543, -1.3055880818262722, -1.3063893887817812, -1.3071906909101472, -1.3079919882295599, -1.3087932807559355, -1.3095945685097377, -1.3103958515046088, -1.3111971297632863, -1.3119984032994125, -1.3127996721311774, -1.3136009362767709, -1.3144021957543828, -1.3152034505799293, -1.3160047007716003, -1.316805946345312, -1.3176071873215278, -1.3184084237116167, -1.319209655538316, -1.320010882815268, -1.3208121055583888, -1.3216133237881422, -1.3224145375181706, -1.3232157467666639, -1.3240169515518119, -1.3248181518849833, -1.3256193477889155, -1.3264205392749773, -1.3272217263636321, -1.3280229090662488, -1.3288240874055646, -1.3296252613906745, -1.3304264310420422, -1.3312275963778575, -1.3320287574072154, -1.3328299141528532, -1.3336310666261397, -1.3344322148475385, -1.3352333588261445, -1.336034498584695, -1.3368356341322851, -1.3376367654893784, -1.338437892671891, -1.3392390156911915, -1.34004013456547, -1.3408412493083688, -1.3416423599380778, -1.3424434664659657, -1.3432445689102224, -1.344045667286764, -1.3448467616069593, -1.345647851888998, -1.3464489381465228, -1.3472500203931759, -1.3480510986471472, -1.3488521729198055, -1.3496532432293407, -1.3504543095871213, -1.3512553720090636, -1.35205643050881, -1.3528574851045505, -1.3536585358076536, -1.3544595826317618, -1.3552606255927913, -1.3560616647066581, -1.3568626999824573, -1.3576637314406526, -1.3584647590903387, -1.359265782947432, -1.3600668030278484, -1.3608678193429569, -1.3616688319086734, -1.3624698407386404, -1.3632708458442266, -1.3640718472413482, -1.3648728449436476, -1.3656738389624934, -1.3664748293160756, -1.3672758160157628, -1.3680767990729237, -1.3688777785034745, -1.3696787543187838, -1.3704797265370416, -1.3712806951650691, -1.3720816602210562, -1.3728826217163714, -1.3736835796623836, -1.3744845340772827, -1.3752854849678897, -1.3760864323523947, -1.3768873762398925, -1.3776883166462994, -1.378489253582984, -1.3792901870635887, -1.380091117101756, -1.3808920437065808, -1.3816929668939792, -1.3824938866775938, -1.3832948030665193, -1.3840957160743983, -1.3848966257148732, -1.3856975319993126, -1.386498434941359, -1.387299334552381, -1.388100230846021, -1.3889011238313742, -1.3897020135243565, -1.3905028999363367, -1.3913037830764097, -1.3921046629604916, -1.3929055395999512, -1.3937064130061572, -1.3945072831882044, -1.395308150162009, -1.3961090139389398, -1.3969098745303654, -1.3977107319476545, -1.3985115862021757, -1.3993124373052979, -1.4001132852706633, -1.4009141301096406, -1.4017149718313249, -1.4025158104470847, -1.4033166459728363, -1.4041174784176746, -1.4049183077906946, -1.4057191341055386, -1.4065199573735754, -1.4073207776061736, -1.4081215948124282, -1.4089224090059815, -1.4097232201982024, -1.410524028395912, -1.4113248336173, -1.4121256358646406, -1.412926435158397, -1.4137272315031169, -1.4145280249101688, -1.4153288153931953, -1.4161296029612913, -1.4169303876258255, -1.4177311693958927, -1.4185319482828618, -1.419332724300375, -1.4201334974552537, -1.4209342677588666, -1.4217350352225822, -1.4225357998577692, -1.4233365616735227, -1.4241373206789376, -1.4249380768876563, -1.4257388303065, -1.426539580949111, -1.4273403288245845, -1.4281410739420153, -1.428941816312772, -1.4297425559459498, -1.4305432928506434, -1.431344027042769, -1.4321447585246005, -1.432945487312054, -1.4337462134119505, -1.434546936835659, -1.4353476575922741, -1.436148375690891, -1.4369490911428784, -1.437749803957331, -1.4385505141456179, -1.4393512217122861, -1.4401519266755258, -1.440952629035337, -1.4417533288099094, -1.4425540260037906, -1.4433547206260755, -1.4441554126904066, -1.4449561022013313, -1.445756789172492, -1.44655747361071, -1.447358155527354, -1.4481588349292451, -1.4489595118254783, -1.449760186229696, -1.4505608581464458, -1.4513615275870961, -1.4521621945607421, -1.452962859074205, -1.453763521141127, -1.4545641807660559, -1.45536483796036, -1.4561654927331347, -1.4569661450912008, -1.4577667950459272, -1.458567442604135, -1.459368087777193, -1.4601687305719224, -1.460969370997418, -1.461770009062775, -1.4625706447748144, -1.4633712781471786, -1.4641719091844152, -1.464972537895619, -1.4657731642898852, -1.4665737883763086, -1.4673744101617103, -1.4681750296574592, -1.4689756468681026, -1.469776261807283, -1.470576874477274, -1.4713774848917183, -1.4721780930551631, -1.4729786989789773, -1.4737793026677082, -1.4745799041327246, -1.4753805033831213, -1.476181100423446, -1.4769816952650672, -1.4777822879125324, -1.478582878379484, -1.479383466668196, -1.4801840527900367, -1.4809846367518276, -1.4817852185626634, -1.4825857982270918, -1.483386375758755, -1.4841869511622008, -1.48498752444425, -1.485788095613998, -1.4865886646805393, -1.4873892316484216, -1.4881897965290136, -1.4889903593291365, -1.4897909200533377, -1.490591478712986, -1.4913920353126286, -1.4921925898636346, -1.4929931423705511, -1.4937936928424733, -1.4945942412839486, -1.4953947877063456, -1.4961953321164856, -1.4969958745211898, -1.4977964149250056, -1.4985969533415755, -1.4993974897708995, -1.50019802422662, -1.5009985567110107, -1.5017990872354403, -1.5025996158044563, -1.5034001424271537, -1.5042006671103536, -1.5050011898586035, -1.5058017106809984, -1.5066022295866333, -1.5074027465800555, -1.5082032616680863, -1.5090037748598206, -1.509804286159806, -1.5106047955771373, -1.5114053031186359, -1.512205808788849, -1.5130063125968718, -1.5138068145495254, -1.5146073146513572, -1.515407812913736, -1.5162083093389356, -1.5170088039360508, -1.5178092967119028, -1.5186097876710392, -1.5194102768225548, -1.5202107641709972, -1.5210112497254613, -1.5218117334927683, -1.5226122154774657, -1.5234126956863747, -1.5242131741263165, -1.5250136508018386, -1.5258141257243096, -1.5266145988960034, -1.5274150703260148, -1.528215540021165, -1.5290160079837278, -1.5298164742227982, -1.5306169387451973, -1.5314174015554727, -1.5322178626627192, -1.5330183220714844, -1.5338187797885894, -1.5346192358185817, -1.5354196901682826, -1.536220142846787, -1.5370205938563686, -1.5378210432061223, -1.5386214909005957, -1.53942193694661, -1.5402223813487126, -1.5410228241159984, -1.5418232652507413, -1.5426237047620361, -1.5434241426521567, -1.5442245789324716, -1.5450250136029808, -1.5458254466750532, -1.5466258781509623, -1.5474263080398032, -1.5482267363438496, -1.5490271630699226, -1.5498275882271173, -1.5506280118154336, -1.5514284338462403, -1.552228854321811, -1.553029273248967, -1.5538296906345295, -1.5546301064807722, -1.55543052079679, -1.5562309335894042, -1.5570313448586148, -1.5578317546135168, -1.5586321628609312, -1.5594325696054057, -1.5602329748492139, -1.5610333786037245, -1.5618337808689375, -1.562634181653948, -1.5634345809633032, -1.5642349788015508, -1.5650353751777857, -1.565835770089734, -1.5666361635487647, -1.5674365555616987, -1.5682369461285361, -1.569037335258372, -1.56983772295348, -1.5706381092229549, -1.5714384940713444, -1.5722388775009222, -1.5730392595185094, -1.5738396401286536, -1.574640019338176, -1.575440397151624, -1.576240773573545, -1.5770411486107605, -1.577841522265544, -1.5786418945447167, -1.5794422654551, -1.5802426349966936, -1.5810430031785927, -1.5818433700053447, -1.582643735481497, -1.5834440996115973, -1.5842444624024665, -1.5850448238563786, -1.5858451839778809, -1.5866455427760684, -1.5874459002532149, -1.588246256411594, -1.5890466112603008, -1.589846964801609, -1.5906473170446134, -1.5914476679893141, -1.592248017637985, -1.5930483660019945, -1.5938487130836165, -1.5946490588873985, -1.5954494034178879, -1.596249746681906, -1.5970500886771788, -1.597850429417349, -1.5986507689024165, -1.5994511071369288, -1.6002514441254334, -1.6010517798747514, -1.6018521143894304, -1.6026524476694703, -1.6034527797239662, -1.6042531105551916, -1.6050534401699679, -1.6058537685705687, -1.6066540957592679, -1.607454421747434, -1.6082547465350672, -1.6090550701267148, -1.6098553925246506, -1.6106557137379696, -1.6114560337689454, -1.612256352619852, -1.613056670299784, -1.6138569868087416, -1.6146573021512722, -1.6154576163341972, -1.61625792935979, -1.6170582412348722, -1.6178585519594435, -1.618658861542599, -1.6194591699843386, -1.6202594772914836, -1.6210597834663076, -1.6218600885133583, -1.6226603924417304, -1.6234606952468766, -1.6242609969378918, -1.6250612975215972, -1.625861596995719, -1.6266618953670786, -1.627462192642497, -1.6282624888219743, -1.629062783910058, -1.629863077915843, -1.6306633708347817, -1.631463662678243, -1.6322639534485006, -1.6330642431455544, -1.6338645317784994, -1.6346648193473357, -1.6354651058588843, -1.636265391315419, -1.6370656757192137, -1.6378659590770894, -1.6386662413935937, -1.6394665226710003, -1.640266802911583, -1.6410670821198892, -1.64186736030274, -1.6426676374601357, -1.6434679135988972, -1.6442681887190247, -1.6450684628273393, -1.6458687359261148, -1.6466690080221724, -1.647469279115512, -1.6482695492106814, -1.649069818309954, -1.6498700864224247, -1.65067035354582, -1.6514706196846873, -1.6522708848458478, -1.6530711490315753, -1.6538714122441434, -1.6546716744880996, -1.6554719357657177, -1.6562721960815452, -1.6570724554401295, -1.6578727138437444, -1.6586729712969372, -1.659473227801982, -1.6602734833634258, -1.6610737379835427, -1.6618739916691538, -1.6626742444179854, -1.6634744962368586, -1.664274747130321, -1.6650749970983725, -1.665875246150108, -1.6666754942787065, -1.667475741500084, -1.668275987809693, -1.669076233214355, -1.6698764777117958, -1.6706767213111107, -1.671476964016847, -1.672277205826731, -1.673077446747584, -1.6738776867794058, -1.6746779259312916, -1.6754781642009675, -1.676278401592981, -1.6770786381118796, -1.6778788737622108, -1.6786791085439745, -1.6794793424594445, -1.680279575515442, -1.6810798077142408, -1.6818800390603883, -1.6826802695538845, -1.6834804991970032, -1.6842807279965655, -1.6850809559525715, -1.6858811830718423, -1.686681409354378, -1.6874816348047261, -1.6882818594251603, -1.6890820832179543, -1.6898823061899293, -1.6906825283410853, -1.6914827496691487, -1.6922829701877617, -1.693083189892377, -1.6938834087898158, -1.6946836268823517, -1.6954838441699849, -1.6962840606618101, -1.6970842763555538, -1.6978844912512159, -1.698684705360165, -1.6994849186801275, -1.700285131213377, -1.7010853429690087, -1.7018855539424749, -1.7026857641405968, -1.7034859735611008, -1.7042861822176292, -1.7050863901033608, -1.7058865972228432, -1.7066868035806237, -1.70748700918125, -1.708287214022448, -1.7090874181110394, -1.70988762144475, -1.7106878240349488, -1.7114880258770881, -1.712288226980263, -1.7130884273421998, -1.713888626965172, -1.7146888258537274, -1.7154890240101395, -1.7162892214389558, -1.7170894181401763, -1.7178896141138011, -1.7186898093734726, -1.7194900039100958, -1.7202901977304919, -1.7210903908437558, -1.721890583238519, -1.7226907749306974, -1.72349096591347, -1.7242911561982055, -1.7250913457780825, -1.7258915346599224, -1.72669172285282, -1.7274919103476805, -1.7282920971535987, -1.729092283275122, -1.7298924687077033, -1.7306926534604372, -1.73149283753105, -1.7322930209263632, -1.7330932036486502, -1.7338933856933636, -1.7346935670695984, -1.7354937477841759, -1.736293927828001, -1.7370941072124424, -1.7378942859329527, -1.7386944639986268, -1.7394946414094647, -1.7402948181631928, -1.7410949942711795, -1.7418951697311513, -1.7426953445476556, -1.743495518716145, -1.7442956922457142, -1.7450958651340898, -1.7458960373926402, -1.746696209009997, -1.7474963799998022, -1.74829655036433, -1.7490967200922114, -1.7498968892039102, -1.7506970576880576, -1.7514972255560224, -1.752297392803257, -1.7530975594388565, -1.7538977254582733, -1.7546978908683286, -1.7554980556690225, -1.7562982198649024, -1.7570983834536946, -1.7578985464422203, -1.7586987088304795, -1.7594988706252934, -1.7602990318221146, -1.761099192420943, -1.7618993524331472, -1.7626995118564537, -1.7634996706954098, -1.764299828945468, -1.7650999866157235, -1.765900143706176, -1.7667003002168258, -1.7675004561499463, -1.7683006115146327, -1.7691007663040637, -1.7699009205273342, -1.7707010741798968, -1.7715012272685726, -1.7723013797933618, -1.7731015317588117, -1.7739016831626486, -1.7747018340116938, -1.7755019843036735, -1.776302134043135, -1.7771022832323524, -1.7779024318713255, -1.7787025799668754, -1.7795027275144548, -1.7803028745163374, -1.7811030209793444, -1.781903166910297, -1.7827033122955527, -1.7835034571510278, -1.784303601469901, -1.7851037452589935, -1.7859038885205791, -1.7867040312546578, -1.7875041734680508, -1.7883043151493894, -1.7891044563145897, -1.7899045969591043, -1.790704737085207, -1.791504876697445, -1.7923050157958187, -1.7931051543826015, -1.7939052924600674, -1.7947054300282161, -1.7955055670893216, -1.7963057036479313, -1.7971058397017714, -1.797905975259937, -1.7987061103133328, -1.7995062448733279, -1.8003063789353746, -1.8011065125062942, -1.801906645590634, -1.8027067781792994, -1.8035069102836587, -1.8043070418991647, -1.8051071730258172, -1.8059073036818063, -1.806707433848942, -1.8075075635385929, -1.8083076927553066, -1.8091078214945355, -1.8099079497585535, -1.8107080775450868, -1.8115082048677777, -1.8123083317243527, -1.8131084581125378, -1.8139085840300595, -1.81470870949056, -1.815508834489492, -1.8163089590200343, -1.8171090831049241, -1.817909206723698, -1.8187093298968193, -1.8195094526083722, -1.8203095748742726, -1.8211096966854257, -1.8219098180509263, -1.8227099389685009, -1.8235100594472442, -1.8243101794780614, -1.8251102990677737, -1.825910418216381, -1.8267105369216097, -1.827510655197102, -1.8283107730405845, -1.8291108904406883, -1.829911007417877, -1.830711123960782, -1.8315112400762246, -1.8323113557642046, -1.8331114710224483, -1.8339115858645982, -1.8347117002815594, -1.835511814271058, -1.8363119278490103, -1.8371120410063213, -1.8379121537452647, -1.8387122660726618, -1.8395123779862388, -1.8403124894882694, -1.84111260057648, -1.841912711262239, -1.8427128215364519, -1.8435129314059395, -1.8443130408684283, -1.8451131499352869, -1.8459132585951465, -1.846713366859376, -1.8475134747234279, -1.8483135821850283, -1.8491136892578197, -1.849913795934981, -1.8507139022187857, -1.8515140081160553, -1.852314113622242, -1.8531142187350724, -1.853914323465915, -1.8547144278102223, -1.8555145317770894, -1.8563146353506, -1.8571147385466702, -1.8579148413653002, -1.8587149438019424, -1.859515045863418, -1.860315147549727, -1.861115248865417, -1.8619153498036667, -1.862715450373571, -1.86351555057513, -1.8643156504083436, -1.8651157498663906, -1.8659158489606398, -1.8667159476979123, -1.8675160460668394, -1.8683161440674212, -1.8691162417269425, -1.8699163390112972, -1.8707164359386752, -1.8715165325158978, -1.87231662873387, -1.8731167245948654, -1.873916820110253, -1.8747169152641163, -1.8755170100814667, -1.876317104544114, -1.8771171986520585, -1.8779172924189425, -1.8787173858402184, -1.8795174789249813, -1.8803175716595888, -1.8811176640554095, -1.8819177561124434, -1.8827178478284168, -1.8835179392033297, -1.8843180302508244, -1.8851181209618062, -1.8859182113340012, -1.8867183013765043, -1.887518391087042, -1.8883184804724351, -1.8891185695258628, -1.8899186582473249, -1.89071874664819, -1.891518834714816, -1.89231892246994, -1.8931190098999195, -1.8939190969979336, -1.8947191837935407, -1.8955192702526347, -1.8963193563956793, -1.8971194422317694, -1.8979195277427152, -1.8987196129467065, -1.899519697830101, -1.9003197824042672, -1.9011198666737528, -1.9019199506249151, -1.9027200342668493, -1.903520117601829, -1.9043202006389492, -1.9051202833554726, -1.9059203657809576, -1.9067204478994881, -1.907520529713338, -1.908320611231602, -1.9091206924406379, -1.9099207733631829, -1.9107208539810472, -1.9115209342987782, -1.9123210143277447, -1.9131210940543042, -1.9139211734989203, -1.9147212526434032, -1.9155213314923003, -1.9163214100638015, -1.917121488339717, -1.9179215663268678, -1.9187216440298016, -1.9195217214485183, -1.9203217985716492, -1.9211218754264792, -1.9219219519902708, -1.9227220282766666, -1.923522104272024, -1.9243221799968069, -1.9251222554441938, -1.925922330611911, -1.926722405497685, -1.9275224801106106, -1.9283225544506877, -1.9291226285201901, -1.9299227023145704, -1.9307227758315548, -1.9315228490893332, -1.9323229220697158, -1.9331229947817974, -1.933923067234673, -1.934723139416974, -1.9355232113332477, -1.9363232829789467, -1.9371233543586186, -1.9379234254950006, -1.9387234963585342, -1.9395235669560407, -1.9403236372966148, -1.9411237073848042, -1.9419237772069664, -1.942723846783565, -1.9435239160964102, -1.9443239851500493, -1.9451240539558512, -1.945924122502447, -1.9467241908171218, -1.9475242588566744, -1.9483243266552108, -1.9491243941990888, -1.9499244614928557, -1.9507245285478803, -1.9515245953550675, -1.9523246619235124, -1.9531247282327513, -1.953924794300974, -1.9547248601304545, -1.95552492572574, -1.9563249910640934, -1.9571250561614306, -1.9579251210291204, -1.9587251856580679, -1.959525250048273, -1.9603253141997357, -1.9611253781238247, -1.961925441795529, -1.9627255052421333, -1.9635255684545427, -1.964325631435031, -1.9651256941835982, -1.965925756702518, -1.9667258189917902, -1.9675258810491414, -1.9683259428791189, -1.969126004479449, -1.969926065854679, -1.9707261270048093, -1.9715261879389345, -1.9723262486343174, -1.9731263091227902, -1.9739263693747944, -1.9747264294085198, -1.9755264892262403, -1.9763265488097659, -1.9771266081954764, -1.9779266673515394, -1.9787267262938713, -1.9795267850156506, -1.9803268435146038, -1.981126901813468, -1.981926959882685, -1.9827270177495393, -1.9835270753958412, -1.9843271328306855, -1.9851271900608936, -1.9859272470841915, -1.9867273038801159, -1.9875273604827726, -1.9883274168739717, -1.9891274730537134, -1.9899275290288188, -1.9907275848038353, -1.9915276403651205, -1.9923276957217695, -1.9931277508737821, -1.993927805834801, -1.9947278605843621, -1.9955279151247396, -1.9963279694854918, -1.997128023639334, -1.9979280775839925, -1.998728131337657, -1.999528184888959, -2.0003282382447196, -2.001128291404939, -2.0019283443741642, -2.0027283971387533, -2.0035284497214434, -2.004328502099497, -2.005128554297926, -2.0059286062894444, -2.006728658099064, -2.0075287097199634, -2.008328761149869, -2.0091288123796858, -2.009928863423056, -2.010728914295896, -2.0115289649663737, -2.0123290154594997, -2.013129065761632, -2.013929115884139, -2.014729165797462, -2.01552921554935, -2.0163292651284337, -2.017129314521071, -2.0179293637090723, -2.018729412728817, -2.0195294615689363, -2.0203295102453467, -2.0211295587262157, -2.0219296070274595, -2.022729655142257, -2.0235297030933452, -2.024329750869356, -2.0251297984725625, -2.025929845884775, -2.0267298931378264, -2.0275299402089786, -2.0283299871186955, -2.029130033851061, -2.0299300804083487, -2.030730126788285, -2.031530172995417, -2.032330219034293, -2.0331302649276495, -2.033930310630012, -2.034730356168666, -2.0355304015436104, -2.03633044673893, -2.037130491781909, -2.0379305366566314, -2.03873058135855, -2.039530625899033, -2.040330670278081, -2.041130714502515, -2.041930758558692, -2.042730802446613, -2.0435308461730983, -2.0443308897472434, -2.045130933153132, -2.045930976390764, -2.046731019491972, -2.0475310624226495, -2.048331105198713, -2.049131147813341, -2.0499311902642603, -2.0507312325855764, -2.051531274729541, -2.052331316716618, -2.053131358553628, -2.0539314002360243, -2.054731441775175, -2.0555314831528904, -2.056331524373718, -2.057131565444479, -2.0579316063628994, -2.0587316471494432, -2.0595316877768255, -2.0603317282495937, -2.0611317685768427, -2.061931808747204, -2.062731848778867, -2.0635318886604637, -2.0643319284033623, -2.0651319679870994, -2.0659320074253174, -2.0667320467225636, -2.067532085881112, -2.06833212488732, -2.06913216375483, -2.0699322024722733, -2.0707322410532925, -2.071532279484245, -2.0723323177969633, -2.0731323559550674, -2.0739323939676524, -2.0747324318506344, -2.075532469581276, -2.0763325071732197, -2.077132544637834, -2.0779325819637506, -2.0787326191373268, -2.0795326561926686, -2.08033269309567, -2.081132729891806, -2.0819327665356013, -2.082732803038425, -2.0835328394048247, -2.0843328756461688, -2.08513291173972, -2.085932947715037, -2.0867329835630244, -2.087533019263219, -2.0883330548474532, -2.089133090288442, -2.0899331256180176, -2.090733160783884, -2.091533195842885, -2.0923332307700093, -2.093133265572078, -2.093933300249091, -2.094733334791954, -2.0955333691733813, -2.0963334034865966, -2.0971334376565665, -2.0979334716878384, -2.0987335056145184, -2.099533539397953, -2.1003335730540584, -2.1011336065919295, -2.1019336400092925, -2.102733673308421, -2.103533706487042, -2.1043337395178696, -2.105133772455474, -2.105933805268023, -2.1067338379464218, -2.1075338705179547, -2.108333902966706, -2.1091339352881278, -2.1099339675095052, -2.110733999580816, -2.11153403155663, -2.1123340634073884, -2.11313409516265, -2.1139341267769396, -2.1147341582843637, -2.115534189659911, -2.1163342209422353, -2.1171342520949565, -2.1179342831385384, -2.118734314061612, -2.119534344889189, -2.120334375578068, -2.121134406162355, -2.121934436635229, -2.1227344670057846, -2.1235344972444636, -2.1243345273990144, -2.1251345574307834, -2.1259345873556867, -2.126734617160082, -2.1275346468507905, -2.128334676446002, -2.1291347059275267, -2.129934735302186, -2.1307347645677055, -2.1315347937195384, -2.132334822771327, -2.1331348517162496, -2.133934880570223, -2.1347349093036883, -2.1355349379189192, -2.1363349664432008, -2.1371349948447005, -2.1379350231757144, -2.138735051372578, -2.139535079467123, -2.140335107479814, -2.141135135360628, -2.141935163177777, -2.14273519084486, -2.143535218448278, -2.1443352459220932, -2.1451352733413387, -2.1459353006036963, -2.1467353277932943, -2.1475353548783005, -2.1483353818609885, -2.1491354087640957, -2.1499354355376, -2.1507354622406183, -2.1515354888344973, -2.152335515310142, -2.1531355417084796, -2.153935568022689, -2.1547355942254853, -2.155535620312321, -2.156335646337766, -2.157135672238155, -2.1579356980794273, -2.15873572379337, -2.1595357494345535, -2.1603357749506813, -2.161135800423608, -2.161935825757837, -2.1627358510147587, -2.1635358761761836, -2.164335901237564, -2.165135926226185, -2.165935951092024, -2.166735975889651, -2.1675360005963284, -2.1683360252302464, -2.1691360497345613, -2.1699360741774854, -2.1707360985226387, -2.1715361227632, -2.172336146931002, -2.1731361709987596, -2.1739361949869362, -2.1747362188659736, -2.1755362426949887, -2.176336266419412, -2.1771362900551594, -2.177936313611326, -2.1787363370583535, -2.1795363604371687, -2.180336383727308, -2.1811364069310457, -2.1819364300483812, -2.1827364530793147, -2.1835364760124776, -2.1843364988910707, -2.1851365216537033, -2.18593654438223, -2.186736566974332, -2.1875365895209598, -2.188336611965269, -2.189136634302713, -2.189936656585587, -2.1907366787775118, -2.1915367009103193, -2.192336722945356, -2.193136744903086, -2.19393676679033, -2.1947367885684343, -2.1955368102987904, -2.1963368319336496, -2.1971368534661906, -2.1979368749737205, -2.1987368963334575, -2.1995369176681834, -2.2003369389142335, -2.2011369600738817, -2.2019369811653178, -2.202737002161257, -2.2035370230912577, -2.204337043939404, -2.2051370647056956, -2.2059370854196914, -2.2067371060450114, -2.207537126597572, -2.2083371470796465, -2.2091371674480342, -2.2099371877664, -2.2107372079983634, -2.2115372282007684, -2.2123372482917603, -2.2131372683190875, -2.213937288273655, -2.214737308148642, -2.215537327953143, -2.2163373476848847, -2.2171373673279504, -2.217937386911899, -2.2187374064299092, -2.2195374258956235, -2.2203374452612934, -2.221137464567846, -2.2219374837629857, -2.2227375029467566, -2.2235375220009246, -2.224337541050545, -2.225137559981931, -2.2259375788792113, -2.2267375976696258, -2.2275376164145655, -2.2283376350890194, -2.2291376536816188, -2.2299376722378383, -2.230737690671276, -2.231537709079703, -2.232337727399454, -2.233137745698741, -2.2339377638684255, -2.23473778198354, -2.2355378000554538, -2.2363378180682503, -2.2371378360219296, -2.237937853836911, -2.23873787165644, -2.2395378893918405, -2.2403379070567553, -2.2411379246398155, -2.2419379421887697, -2.2427379596558694, -2.2435379770251984, -2.244337994387706, -2.2451380116660857, -2.2459380289240016, -2.246738046038672, -2.247538063116963, -2.2483380801588737, -2.2491380971393937, -2.249938114024417, -2.250738130898071, -2.2515381476489438, -2.252338164361163, -2.2531381809824325, -2.253938197603702, -2.2547382141567596, -2.255538230625689, -2.256338247024132, -2.257138263365732, -2.257938279691416, -2.258738295894318, -2.259538312088125, -2.260338328190983, -2.261138344211986, -2.261938360226168, -2.2627383761653164, -2.2635383920817276, -2.264338407859441, -2.2651384236189642, -2.2659384393034543, -2.266738454965207, -2.2675384705542, -2.2683384860977185, -2.269138501561656, -2.269938516936918, -2.2707385323167273, -2.271538547648788, -2.272338562894447, -2.273138578060525, -2.273938593183402, -2.2747386082676258, -2.275538623326838, -2.2763386382337103, -2.2771386531678672, -2.277938668015622, -2.278738682838366, -2.2795386975610654, -2.280338712281491, -2.2811387269177885, -2.2819387415131587, -2.282738756019853, -2.283538770506084, -2.2843387849604824, -2.2851387992966465, -2.285938813657822, -2.286738827882573, -2.2875388421437037, -2.288338856270684, -2.289138870386296, -2.2899388844496116, -2.290738898403788, -2.291538912414808, -2.2923389263212357, -2.29313894018901, -2.2939389539249078, -2.294738967681269, -2.2955389814171667, -2.2963389950552937, -2.2971390086684096, -2.2979390222292295, -2.2987390357218374, -2.299539049171244, -2.3003390625297016, -2.3011390758904327, -2.30193908924889, -2.3027391024527333, -2.3035391156747664, -2.304339128814945, -2.3051391419073752, -2.3059391549816155, -2.3067391680126548, -2.307539180984577, -2.3083391938837394, -2.3091392067351535, -2.3099392195547352, -2.310739232340211, -2.3115392450688432, -2.3123392577542745, -2.3131392703805886, -2.3139392829818917, -2.31473929551953, -2.3155393080207887, -2.3163393204879412, -2.317139332841407, -2.3179393452289787, -2.3187393575369697, -2.319539369808581, -2.320339382021075, -2.3211393942017366, -2.3219394063278287, -2.322739418426636, -2.3235394304344936, -2.32433944243553, -2.3251394544229242, -2.3259394663125477, -2.3267394781998973, -2.3275394900031188, -2.328339501817709, -2.329139513539076, -2.3299395252263366, -2.330739536859028, -2.3315395485235513, -2.3323395600948515, -2.333139571602487, -2.3339395830805643, -2.334739594517714, -2.335539605902568, -2.3363396172032935, -2.33713962854722, -2.3379396398070185, -2.338739651055448, -2.339539662224297, -2.3403396733954196, -2.3411396844960564, -2.3419396955421234, -2.3427397066063804, -2.343539717554677, -2.344339728555269, -2.3451397393853313, -2.3459397502676893, -2.3467397610863827, -2.347539771914171, -2.348339782648736, -2.3491397933196367, -2.349939804045107, -2.3507398146023206, -2.351539825170903, -2.3523398357144742, -2.353139846278509, -2.353939856737952, -2.354739867113267, -2.3555398775090453, -2.3563398879389297, -2.357139898223295, -2.3579399084871966, -2.358739918787478, -2.3595399289490615, -2.360339939117466, -2.3611399492017426, -2.3619399593405888, -2.3627399693680218, -2.3635399793568013, -2.3643399892887373, -2.365139999327539, -2.365940009227643, -2.3667400190413446, -2.367540028936901, -2.368340038714223, -2.3691400484619862, -2.3699400582188446, -2.3707400679461443, -2.3715400775483886, -2.3723400871369904, -2.3731400967255922, -2.3739401063255627, -2.3747401158550474, -2.3755401252526553, -2.376340134704833, -2.3771401441661055, -2.377940153481859, -2.378740162827171, -2.3795401721429243, -2.380340181395013, -2.381140190647102, -2.3819401998082412, -2.382740209069425, -2.3835402181578047, -2.384340227216626, -2.385140236355028, -2.3859402453570056, -2.3867402543294247, -2.3875402632882015, -2.3883402723060954, -2.38914028116028, -2.38994029005994, -2.3907402988368176, -2.3915403077273822, -2.392340316420132, -2.3931403251469874, -2.3939403339124965, -2.3947403425506764, -2.3955403512820794, -2.3963403598588684, -2.397140368440205, -2.3979403769851615, -2.3987403854482636, -2.3995403939636617, -2.4003404024131214, -2.401140410917151, -2.4019404192006277, -2.4027404276228026, -2.403540435947207, -2.4043404442647898, -2.405140452518708, -2.405940460761258, -2.4067404689697014, -2.407540477109933, -2.4083404853456614, -2.4091404933699323, -2.409940501473784, -2.4107405095116974, -2.411540517642834, -2.4123405255511443, -2.4131405336140688, -2.4139405414996418, -2.4147405494284158, -2.4155405573412736, -2.4163405651086123, -2.417140572980543, -2.4179405807842613, -2.4187405885288626, -2.419540596237084, -2.420340604054445, -2.421140611708097, -2.4219406193140003, -2.422740626908535, -2.4235406346349464, -2.424340642124889, -2.425140649651212, -2.4259406571843556, -2.4267406646811196, -2.4275406721528725, -2.428340679551866, -2.4291406869758703, -2.429940694363495, -2.430740701705645, -2.4315407089818564, -2.4323407163376487, -2.433140723607039, -2.433940730733184, -2.4347407380344066, -2.435540745233311, -2.4363407524072045, -2.437140759537897, -2.437940766695874, -2.4387407737492595, -2.4395407807548963, -2.4403407878446615, -2.441140794811645, -2.4419408017922706, -2.4427408087478852, -2.443540815694405, -2.444340822611366, -2.445140829435104, -2.445940836317959, -2.446740843200814, -2.4475408499267814, -2.4483408567664355, -2.4491408634241907, -2.44994087020018, -2.4507408769693484, -2.451540883579355, -2.4523408902530264, -2.453140896863033, -2.4539409035025983, -2.454740910035298, -2.455540916652126, -2.456340923155267, -2.4571409296856928, -2.4579409361501803, -2.4587409426237627, -2.459540949056418, -2.460340955507263, -2.4611409618444213, -2.4619409682838977, -2.4627409745892237, -2.4635409808604436, -2.464340987213518, -2.4651409934801904, -2.465940999753684, -2.466741005938502, -2.46754101214151, -2.4683410183263277, -2.469141024472492, -2.46994103065731, -2.4707410367693683, -2.471541042854142, -2.472341048916178, -2.473141054978214, -2.473941060956122, -2.474741066940851, -2.4755410729824234, -2.4763410788557394, -2.477141084854111, -2.477941090759259, -2.478741096668955, -2.479541102594567, -2.480341108406492, -2.4811411142229645, -2.4819411199734986, -2.4827411257103904, -2.483541131542779, -2.484341137304682, -2.4851411430393, -2.485941148767097, -2.4867411544335027, -2.48754116010673, -2.488341165675365, -2.489141171323581, -2.4899411769104063, -2.4907411825677173, -2.491541188079509, -2.492341193609491, -2.4931411991212826, -2.493941204446628, -2.494741210053917, -2.495541215458843, -2.4963412209797298, -2.4971412263209913, -2.4979412318145933, -2.49874123716495, -2.499541242544865, -2.5003412478952214, -2.501141253097785, -2.501941258323086, -2.502741263687085, -2.503541269016978, -2.504341274153603, -2.5051412793402505, -2.5059412846587747, -2.5067412898795283, -2.5075412948888243, -2.508341300116399, -2.509141305255298, -2.5099413103805546, -2.510741315430778, -2.5115413205287496, -2.5123413254630123, -2.5131413305041406, -2.513941335527079, -2.5147413406023134, -2.5155413456207043, -2.516341350591347, -2.5171413553800903, -2.517941360348459, -2.5187413652577106, -2.5195413701305824, -2.5203413750602977, -2.5211413798194826, -2.5219413846923544, -2.5227413894606343, -2.523541394272115, -2.5243413991222496, -2.5251414038586972, -2.5259414086133347, -2.526741413327045, -2.5275414180816824, -2.528341422661242, -2.5291414274090585, -2.529941432040914, -2.5307414366250214, -2.5315414412023074, -2.5323414459865035, -2.5331414505046723, -2.533941455022841, -2.534741459584211, -2.535541464163771, -2.536341468697856, -2.537141473065958, -2.5379414776591602, -2.538741482038631, -2.5395414865158727, -2.5403414909499134, -2.5411414954157863, -2.541941499840732, -2.5427415042133816, -2.543541508649696, -2.5443415129268487, -2.5451415172653924, -2.545941521692612, -2.546741525915195, -2.5475415301878, -2.54834153454226, -2.549141538758022, -2.5499415431124817, -2.550741547159987, -2.5515415513780226, -2.5523415557256612, -2.5531415597981777, -2.5539415638957053, -2.5547415680978247, -2.55554157237043, -2.556341576422483, -2.5571415805472952, -2.5579415846198117, -2.558741588649127, -2.5595415927375598, -2.5603415967714227, -2.5611416007984644, -2.5619416048891708, -2.5627416088229893, -2.56354161278864, -2.564341616831598, -2.5651416207244893, -2.56594162472652, -2.566741628610316, -2.5675416324349953, -2.568341636521154, -2.5691416403958556, -2.5699416442046186, -2.5707416480292977, -2.5715416518903567, -2.5723416556036227, -2.5731416596624967, -2.5739416632848133, -2.574741667175431, -2.5755416708682333, -2.576341674576952, -2.5771416783379664, -2.577941682010305, -2.5787416859782297, -2.579541689586904, -2.5803416932183154, -2.581141697013436, -2.5819417006471213, -2.582741704173941, -2.583541707807626, -2.5843417115345346, -2.5851417152500744, -2.5859417187041345, -2.586741722224133, -2.5875417258873767, -2.5883417293277944, -2.5891417328500665, -2.5899417364769306, -2.590741740099247, -2.5915417434578103, -2.592341746991451, -2.593141750550103, -2.59394175387456, -2.59474175734681, -2.595541760828155, -2.5963417644618403, -2.5971417676635156, -2.5979417710743746, -2.5987417743647256, -2.5995417779347463, -2.6003417812478347, -2.601141784433594, -2.6019417880013407, -2.602741791230301, -2.6035417946548023, -2.6043417978996786, -2.6051418011809346, -2.6059418044098948, -2.6067418076002014, -2.60754181085872, -2.6083418143878134, -2.6091418174894443, -2.609941820625181, -2.610741823874605, -2.611541826973962, -2.6123418303916424, -2.6131418334637146, -2.6139418366881273, -2.6147418398625177, -2.6155418429391375, -2.616341846088517, -2.6171418491924214, -2.6179418522235665, -2.618741855422968, -2.6195418584677554, -2.620341861596671, -2.6211418645641515, -2.6219418677771955, -2.6227418707287597, -2.6235418737689997, -2.6243418767569437, -2.6251418796516646, -2.6259418825691228, -2.6267418856321, -2.627541888422229, -2.6283418915033963, -2.6291418944140332, -2.6299418972723743, -2.6307419004308485, -2.6315419032459886, -2.6323419063317033, -2.633141909151391, -2.633941912007458, -2.6347419148430617, -2.635541917717319, -2.636341920591576, -2.6371419235158555, -2.6379419262946158, -2.6387419290711023, -2.6395419320067504, -2.6403419347673207, -2.6411419374551315, -2.6419419402088806, -2.6427419429558086, -2.6435419459960485, -2.644341948615647, -2.645141951362575, -2.645941954091313, -2.6467419567245543, -2.647541959480577, -2.648341962329823, -2.64914196486302, -2.6499419674485125, -2.6507419702136303, -2.6515419730696976, -2.652341975330046, -2.653141978188387, -2.6539419807147624, -2.654741983739086, -2.6555419861699647, -2.656341988612212, -2.6571419912158944, -2.657941993976465, -2.6587419964323544, -2.659541998965551, -2.660342001514664, -2.6611420040410394, -2.6619420066833754, -2.6627420092120246, -2.6635420115292163, -2.6643420141897423, -2.665142016513755, -2.665942018828673, -2.666742021627897, -2.667542024236127, -2.668342026576056, -2.6691420290160295, -2.669942031351411, -2.670742033795932, -2.6715420361495035, -2.672342038614488, -2.673142041024903, -2.67394204331481, -2.6747420457502358, -2.675542048096986, -2.6763420506938473, -2.677142052992849, -2.6779420553145883, -2.678742057831869, -2.679542060135418, -2.680342062373029, -2.681142064815276, -2.6819420670574345, -2.6827420692268333, -2.6835420717554825, -2.6843420738612167, -2.6851420762625366, -2.6859420782955112, -2.6867420806240716, -2.6875420829298946, -2.688342085178874, -2.6891420873892002, -2.68994208984509, -2.6907420919030756, -2.69154209440444, -2.692342096460152, -2.693142098470389, -2.693942100742106, -2.694742102702321, -2.6955421049603956, -2.696342107313967, -2.697142109403785, -2.697942111561815, -2.6987421137539513, -2.6995421158437694, -2.700342117824448, -2.701142119907445, -2.7019421223724294, -2.7027421243826666, -2.703542126399725, -2.704342128282633, -2.705142130588456, -2.7059421325009225, -2.706742134777187, -2.7075421366100727, -2.708342138940907, -2.7091421406259997, -2.7099421428317783, -2.7107421446169155, -2.711542146927286, -2.7123421487692667, -2.7131421508613585, -2.7139421529875563, -2.7147421549045703, -2.7155421567442772, -2.7163421588909387, -2.717142160769299, -2.717942162688587, -2.7187421647988685, -2.7195421666317543, -2.720342168403249, -2.721142170579469, -2.7219421723032156, -2.722742174286168, -2.7235421763282375, -2.7243421780906374, -2.725142180260036, -2.7259421818632745, -2.726742183846227, -2.727542185813263, -2.7283421875870317, -2.729142189294862, -2.7299421913642163, -2.7307421929970133, -2.7315421948935636, -2.7323421967764716, -2.7331421986434634, -2.7339422004581593, -2.734742202136431, -2.7355422039534005, -2.736342205840856, -2.7371422075873397, -2.737942209424773, -2.7387422111712567, -2.739542213145114, -2.740342214882503, -2.741142216547132, -2.7419422179798403, -2.742742220065111, -2.743542221625148, -2.7443422232988723, -2.745142225174959, -2.7459422271942913, -2.7467422283245924, -2.7475422301529306, -2.7483422317925488, -2.749142233845987, -2.749942235201388, -2.7507422371752455, -2.7515422389467403, -2.7523422404840403, -2.753142242180502, -2.75394224357683, -2.754742245493844, -2.7555422472698865, -2.756342248879946, -2.7571422502148835, -2.757942252022758, -2.758742253723767, -2.7595422551519277, -2.7603422571144165, -2.7611422586244316, -2.7619422599821064, -2.762742261601261, -2.763542263172667, -2.7643422648350224, -2.7651422662336245, -2.765942268196113, -2.766742269405995, -2.767542271227512, -2.7683422724442153, -2.7691422738905658, -2.769942275409676, -2.770742277162981, -2.7715422783501253, -2.7723422803785525, -2.773142282177332, -2.7739422831575666, -2.7747422851473402, -2.7755422863117474, -2.7763422880809685, -2.7771422889770747, -2.7779422912738028, -2.778742291919798, -2.7795422940209846, -2.7803422948261414, -2.781142296443022, -2.78194229810083, -2.7827422993925666, -2.783542301186799, -2.7843423027763947, -2.785142304129522, -2.7859423056463584, -2.78674230708134, -2.787542308300317, -2.788342309673908, -2.789142310906527, -2.7899423125211342, -2.790742313626424, -2.7915423153592656, -2.7923423166896555, -2.7931423182610615, -2.793942319138978, -2.794742320899104, -2.7955423223886555, -2.7963423237463303, -2.7971423250335192, -2.797942326288876, -2.7987423274555567, -2.7995423285267407, -2.8003423301504426, -2.8011423317491335, -2.801942333318266, -2.8027423343326063, -2.8035423353946953, -2.8043423362748854, -2.8051423381305085, -2.805942339551848, -2.80674234076173, -2.807542342305851, -2.808342343297454, -2.8091423446869612, -2.8099423463584117, -2.810742347306814, -2.8115423484257462, -2.8123423495515, -2.8131423509955766, -2.8139423523418827, -2.8147423533107485, -2.815542354834406, -2.816342355791903, -2.817142357547482, -2.817942358425398, -2.818742359548878, -2.8195423608246983, -2.820342362252859, -2.8211423634991206, -2.8219423646930863, -2.8227423654595896, -2.8235423668172643, -2.8243423684659774, -2.82514236958491, -2.8259423707697806, -2.8267423714703455, -2.827542372975813, -2.8283423744153424, -2.829142375384208, -2.829942376432655, -2.830742377847173, -2.831542378675067, -2.8323423802078196, -2.833142381335847, -2.83394238210235, -2.83474238388294, -2.835542384374321, -2.836342386145816, -2.8371423865621637, -2.8379423880585364, -2.838742388934179, -2.839542390357792, -2.840342391172044, -2.8411423925479085, -2.841942392964256, -2.8427423947130137, -2.84354239600475, -2.844342396844013, -2.8451423981425705, -2.8459423993274413, -2.846742399941604, -2.847542401290184, -2.8483424025455406, -2.8491424031096813, -2.849942405013053, -2.8507424050860664, -2.851542406341423, -2.852342407696824, -2.8531424084201262, -2.853942409534511, -2.8547424108444375, -2.8555424116905215, -2.8563424126048176, -2.8571424142967317, -2.8579424150314026, -2.8587424157069563, -2.85954241679633, -2.8603424180721504, -2.861142418963709, -2.861942419689285, -2.862742420355744, -2.863542422313685, -2.8643424226822845, -2.865142423974021, -2.8659424251429755, -2.866742425854909, -2.867542427212584, -2.868342427599373, -2.86914242902526, -2.8699424297872156, -2.870742430631026, -2.8715424318249916, -2.8723424326005897, -2.873142433417115, -2.873942434524679, -2.8747424352275175, -2.8755424368057447, -2.876342437224366, -2.877142438229612, -2.877942439228036, -2.8787424399399697, -2.8795424413067394, -2.8803424420073043, -2.881142442926148, -2.8819424437494945, -2.882742445109443, -2.883542445816829, -2.884342446578785, -2.8851424474885334, -2.8859424484051033, -2.8867424494490024, -2.887542450265528, -2.8883424512002875, -2.8891424521077624, -2.8899424532176, -2.8907424538681425, -2.8915424547506063, -2.8923424555671318, -2.893142456911164, -2.8939424574275563, -2.8947424582804615, -2.895542459353919, -2.896342460304595, -2.897142460959685, -2.897942461567027, -2.8987424624517644, -2.899542462981799, -2.9003424639779496, -2.901142465528892, -2.9019424662681104, -2.9027424665844137, -2.9035424679238986, -2.9043424687381503, -2.905142469256816, -2.90594247058948, -2.906742470933068, -2.9075424723544074, -2.9083424728025875, -2.9091424728619586, -2.9099424740468294, -2.9107424752885436, -2.9115424759436337, -2.912342476287222, -2.9131424769036585, -2.9139424786410473, -2.914742478022845, -2.9155424789848894, -2.9163424804585247, -2.9171424814546754, -2.9179424816868504, -2.9187424830399777, -2.91954248329489, -2.920342484723051, -2.9211424841889766, -2.9219424858035836, -2.922742485533263, -2.923542487025088, -2.9243424874869106, -2.925142488658139, -2.925942489729323, -2.92674248965227, -2.9275424900095004, -2.9283424918287437, -2.9291424925384035, -2.9299424923044626, -2.9307424936803272, -2.931542494173982, -2.93234249517468, -2.933142495875245, -2.9339424969327865, -2.9347424970171687, -2.9355424985999434, -2.9363424991868214, -2.9371424994121753, -2.937942500951749, -2.9387425003699263, -2.939542501925416, -2.9403425019916085, -2.941142503549372, -2.9419425035041513, -2.9427425039182253, -2.943542504593779, -2.9443425057991135, -2.9451425070499226, -2.945942507175232, -2.946742507959925, -2.9475425080238438, -2.9483425095725124, -2.949142510518641, -2.9499425106439503, -2.95074251095798, -2.9515425119723204, -2.952342513329995, -2.95314251378727, -2.9539425132668384, -2.9547425138196104, -2.9555425152614134, -2.9563425157869005, -2.9571425163805998, -2.9579425173335494, -2.9587425180318405, -2.959542518898388, -2.9603425204584255, -2.9611425198947927, -2.961942520408911, -2.96274252060698, -2.9635425224853407, -2.9643425219876463, -2.965142523318036, -2.9659425235934123, -2.9667425242575973, -2.9675425242373876, -2.9683425253631412, -2.969142526281985, -2.969942527143985, -2.970742526168806, -2.9715425273991514, -2.972342528490799, -2.9731425296756697, -2.973942529569058, -2.9747425293123797, -2.975542530931534, -2.9763425314365577, -2.9771425318710953, -2.977942532148745, -2.9787425327219808, -2.9795425337863435, -2.980342534723377, -2.9811425350101217, -2.981942535644748, -2.982742535826901, -2.9835425367753032, -2.984342537830571, -2.9851425382219077, -2.985942538253994, -2.9867425396889757, -2.9875425406510203, -2.988342539530322, -2.9891425404582606, -2.9899425412452274, -2.990742542611997, -2.9915425424030673, -2.992342541680273, -2.9931425431084335, -2.993942544409265, -2.994742545046165, -2.995542545701255, -2.9963425459584414, -2.9971425462611023, -2.9979425471049126, -2.9987425473575513, -2.999542547921692, -3.0003425491952385, -3.0011425495479216, -3.001942549311707, -3.002742550071389, -3.003542550553675, -3.0043425514634237, -3.005142551502331, -3.005942551734506, -3.00674255237368, -3.0075425530696975, -3.0083425536565755, -3.0091425539933425, -3.0099425552214143, -3.010742555369461, -3.011542555801725, -3.0123425560748274, -3.013142556891353, -3.0139425569279865, -3.014742557423915, -3.0155425587338414, -3.016342557881444, -3.0171425589480805, -3.0179425595349585, -3.0187425595420336, -3.0195425601743864, -3.020342561652569, -3.0211425625736865, -3.021942561816786, -3.022742561869336, -3.0235425626926826, -3.0243425629544163, -3.025142564389398, -3.025942564710249, -3.0267425660088065, -3.027542564085479, -3.0283425660002194, -3.029142565866323, -3.029942566780619, -3.0307425675289323, -3.0315425675451024, -3.0323425685730854, -3.033142568161793, -3.033942568582688, -3.0347425696152186, -3.035542570854659, -3.036342571432442, -3.0371425711257416, -3.037942570880432, -3.038742572072124, -3.039542571476659, -3.040342573332282, -3.0411425729141683, -3.0419425739034978, -3.0427425750542625, -3.0435425733696775, -3.0443425751730047, -3.0451425750027283, -3.0459425761307557, -3.046742576187853, -3.047542576024398, -3.048342577543508, -3.0491425773595893, -3.049942578655873, -3.0507425774510466, -3.0515425782289185, -3.052342579486549, -3.0531425797209977, -3.0539425796985142, -3.054742579544154, -3.055542580624433, -3.0563425808202282, -3.05714258163448, -3.057942581684756, -3.058742582953755, -3.0595425830949807, -3.0603425839251486, -3.0611425854124263, -3.0619425848328774, -3.062742585326532, -3.063542585172172, -3.0643425853338613, -3.0651425872122218, -3.0659425866599577, -3.0667425855051533, -3.0675425863853434, -3.0683425859285762, -3.069142588366276, -3.069942587966352, -3.07074258663647, -3.0715425880646308, -3.0723425878852595, -3.0731425906935783, -3.0739425895410477, -3.074742590487176, -3.0755425913991985, -3.0763425904399355, -3.0771425923501283, -3.07794259314619, -3.078742593094148, -3.0795425939038523, -3.0803425919327765, -3.0811425914646406, -3.0819425942274847, -3.0827425935024166, -3.0835425948168904, -3.08434259451019, -3.085142593782848, -3.0859425943310725, -3.086742595847909, -3.087542595432069, -3.0883425969670952, -3.0891425978200004, -3.089942596840274, -3.0907425977136427, -3.091542597952639, -3.0923425996741116, -3.0931425990445405, -3.093942601179833, -3.0947425991905675, -3.0955425979630036, -3.0963425993297733, -3.097142599264089, -3.0979425994644316, -3.098742600694777, -3.09954260151585, -3.1003426038785165, -3.1011426009342813, -3.1019426015006957, -3.102742602233093, -3.103542603120104, -3.1043426047119738, -3.105142604823641, -3.105942603905305, -3.106742605997397, -3.107542604224136, -3.1083426051202423, -3.109142605388797, -3.109942604861544, -3.1107426064238552, -3.111542606590092, -3.112342605708136, -3.113142606451902, -3.113942606761384, -3.1147426072300277, -3.115542607193902, -3.1163426079763212, -3.117142607806045, -3.1179426098367458, -3.1187426084568415, -3.1195426102942747, -3.120342608598321, -3.121142610324341, -3.1219426099994507, -3.122742610490832, -3.1235426117552834, -3.124342611412203, -3.125142613718026, -3.125942612595054, -3.126742611869986, -3.1275426105787574, -3.1283426119000524, -3.129142612500573, -3.1299426127873176, -3.1307426129239957, -3.1315426141929947, -3.132342614793515, -3.1331426149711206, -3.133942616417471, -3.1347426143418033, -3.135542614612632, -3.136342615345029, -3.1371426155726567, -3.1379426166301982, -3.138742615700494, -3.1395426183019026, -3.1403426181361738, -3.1411426171609946, -3.1419426197510347, -3.1427426194829877, -3.1435426189057125, -3.1443426186012857, -3.145142617942156, -3.1459426175581484, -3.146742619325096, -3.1475426185772903, -3.1483426209263143, -3.1491426197737837, -3.149942619821786, -3.1507426208452216, -3.1515426211501563, -3.1523426230899076, -3.1531426223330072, -3.153942620357384, -3.154742621626383, -3.1555426211377835, -3.1563426221498503, -3.1571426232028443, -3.157942623112149, -3.158742624217439, -3.1595426236856383, -3.1603426234744347, -3.1611426259053133, -3.1619426267582185, -3.1627426249986, -3.163542625346736, -3.164342622616232, -3.1651426244923186, -3.165942624956415, -3.1667426238448115, -3.1675426260233053, -3.168342625448304, -3.1691426275654067, -3.1699426274292364, -3.170742625351295, -3.1715426277980896, -3.1723426282758282, -3.1731426289627507, -3.1739426264527992, -3.174742626835041, -3.1755426277607057, -3.1763426290228836, -3.1771426281090953, -3.1779426297373448, -3.1787426292396503, -3.17954263192064, -3.180342628319295, -3.1811426304886936, -3.1819426322942945, -3.1827426330721664, -3.1835426319560156, -3.184342632902144, -3.185142632720499, -3.1859426320772855, -3.186742630613253, -3.1875426309113664, -3.1883426307092577, -3.189142630377546, -3.1899426340976333, -3.1907426335953915, -3.191542632761184, -3.192342632709142, -3.193142632154604, -3.1939426357723733, -3.1947426381555033, -3.195542637673725, -3.196342637994576, -3.1971426364782474, -3.197942633743196, -3.1987426367265925, -3.19954263484874, -3.2003426335734275, -3.201142631418179, -3.2019426325894074, -3.2027426354727595, -3.2035426356344487, -3.2043426342727344, -3.2051426364739655, -3.2059426349621845, -3.206742638211608, -3.2075426372591664, -3.2083426393739956, -3.2091426351610153, -3.209942636018468, -3.210742636580335, -3.211542639170375, -3.2123426396071864, -3.2131426388275486, -3.2139426374385494, -3.2147426373592225, -3.2155426379824803, -3.216342637309708, -3.2171426387901647, -3.217942636609905, -3.2187426385405615, -3.2195426430564567, -3.2203426403805224, -3.221142639812342, -3.2219426400854445, -3.2227426384599767, -3.2235426414752055, -3.2243426429715782, -3.2251426422647, -3.2259426430789517, -3.226742641203373, -3.227542643102197, -3.2283426441438223, -3.229142644855756, -3.2299426433621647, -3.230742641857205, -3.231542646132084, -3.2323426447703696, -3.233142643686051, -3.2339426423948225, -3.234742641215007, -3.2355426440346946, -3.2363426425933994, -3.2371426441216045, -3.2379426447880633, -3.2387426438538114, -3.2395426422397122, -3.2403426462167317, -3.2411426470150673, -3.241942645107656, -3.2427426450874464, -3.243542643318733, -3.2443426479164827, -3.245142647509738, -3.2459426483671905, -3.2467426480036465, -3.247542647258115, -3.2483426517512726, -3.249142648413681, -3.2499426496463, -3.2507426477866375, -3.2515426502129685, -3.252342650085893, -3.253142647048435, -3.253942648663042, -3.2547426438179627, -3.2555426440092106, -3.2563426453464217, -3.2571426483775667, -3.257942646656602, -3.2587426434827194, -3.2595426444902387, -3.260342646852905, -3.2611426486971595, -3.261942648908871, -3.2627426468832255, -3.263542649875717, -3.2643426474021453, -3.265142649667041, -3.265942651108844, -3.266742648844456, -3.267542648087556, -3.26834264893364, -3.269142651575976, -3.269942650173334, -3.270742652240415, -3.271542650753645, -3.2723426491781993, -3.273142651347598, -3.273942654569737, -3.274742653671865, -3.2755426491928574, -3.276342651087134, -3.2771426523697755, -3.277942651183139, -3.2787426537004194, -3.2795426532595684, -3.2803426530165325, -3.2811426537239186, -3.2819426541038865, -3.282742653417472, -3.28354265118719, -3.2843426524038932, -3.285142653950288, -3.2859426550851367, -3.2867426564928337, -3.2875426550356224, -3.2883426547743966, -3.2891426539970325, -3.2899426570713786, -3.290742655082113, -3.291542656601223, -3.292342653152218, -3.2931426538732467, -3.293942653284603, -3.294742655899654, -3.2955426568867097, -3.2963426566641374, -3.2971426563756268, -3.2979426564099867, -3.2987426595548186, -3.299542657331358, -3.300342656638122, -3.3011426573182234, -3.301942653487231, -3.30274265945377, -3.3035426585013283, -3.3043426581014046, -3.305142657517308, -3.3059426584293305, -3.3067426595505367, -3.3075426587299717, -3.3083426598466303, -3.309142660644966, -3.309942659001308, -3.310742659970174, -3.3115426619576738, -3.312342659768319, -3.313142659302457, -3.3139426599393573, -3.3147426613811604, -3.3155426644964336, -3.316342658343956, -3.3171426608885213, -3.3179426623712516, -3.318742657937719, -3.319542658126693, -3.3203426626289456, -3.3211426635091357, -3.3219426654989093, -3.322742660847098, -3.323542660983776, -3.3243426602723503, -3.3251426555113994, -3.3259426537722447, -3.326742656739725, -3.327542661758116, -3.3283426647938086, -3.329142660981006, -3.329942656913545, -3.330742656688699, -3.3315426616820787, -3.3323426597064554, -3.3331426613870008, -3.333942657221769, -3.3347426596458263, -3.335542656494681, -3.3363426614403124, -3.337142664933026, -3.3379426653857536, -3.338742666350072, -3.339542660631878, -3.340342658333384, -3.341142661544154, -3.3419426649936668, -3.3427426605192068, -3.343542655851479, -3.3443426661335707, -3.3451426669728335, -3.345942662043626, -3.346742662796487, -3.3475426639563466, -3.348342660464141, -3.349142662196982, -3.349942663322736, -3.3507426618564295, -3.3515426622614086, -3.3523426616659435, -3.353142668803457, -3.3539426638151326, -3.3547426656821244, -3.3555426621376228, -3.3563426622515635, -3.357142667670132, -3.357942666765439, -3.3587426632936968, -3.3595426666795447, -3.360342662296034, -3.361142667887407, -3.3619426656434825, -3.3627426664304494, -3.3635426634498344, -3.36434266900028, -3.365142672556658, -3.365942666717956, -3.366742668187044, -3.367542668160013, -3.3683426656750726, -3.3691426669258817, -3.369942669859256, -3.3707426717194267, -3.3715426693299833, -3.3723426716608174, -3.3731426646716045, -3.373942666222547, -3.3747426653292223, -3.3755426641448594, -3.3763426642724426, -3.3771426664327464, -3.3779426710873395, -3.378742667679262, -3.379542659967001, -3.3803426624933763, -3.381142664396748, -3.3819426641673545, -3.3827426610230305, -3.3835426657913104, -3.384342662392328, -3.3851426596731926, -3.385942673195359, -3.386742670423928, -3.387542671458732, -3.3883426699878783, -3.3891426655452506, -3.389942671639119, -3.3907426614212, -3.391542669306773, -3.3923426689977987, -3.3931426653532526, -3.393942662713698, -3.394742669355537, -3.395542669553606, -3.396342666818555, -3.3971426697678453, -3.3979426690291348, -3.398742668601926, -3.399542667610831, -3.4003426704396134, -3.4011426667768774, -3.4019426628890415, -3.4027426724776433, -3.403542672566573, -3.404342673246674, -3.405142670682153, -3.405942669802471, -3.406742670957783, -3.40754266789304, -3.4083426686368057, -3.4091426700217653, -3.409942667580026, -3.410742668778539, -3.41154267167326, -3.4123426754160846, -3.413142674149867, -3.4139426754006763, -3.4147426715196616, -3.415542671610865, -3.416342670815311, -3.4171426721684384, -3.4179426731191143, -3.4187426721052816, -3.4195426711801247, -3.4203426775468415, -3.4211426755666707, -3.421942677904326, -3.4227426760855906, -3.423542673145903, -3.4243426751356765, -3.425142673073651, -3.4259426686901406, -3.426742674959087, -3.4275426703163703, -3.4283426786475957, -3.4291426736024277, -3.429942674687254, -3.4307426726343238, -3.4315426764180756, -3.432342676811686, -3.433142672287204, -3.433942673035517, -3.4347426752344745, -3.435542677819967, -3.436342680532789, -3.437142678588998, -3.437942673914449, -3.4387426799469267, -3.439542675995426, -3.440342675013426, -3.441142677730795, -3.441942672142204, -3.442742676048738, -3.443542675139497, -3.444342677997838, -3.445142675190027, -3.4459426795399395, -3.4467426828030057, -3.4475426792266717, -3.4483426759618396, -3.4491426768261135, -3.449942683947711, -3.450742678506913, -3.4515426740097155, -3.452342675724367, -3.4531426826367806, -3.453942680613409, -3.4547426813571747, -3.4555426767212793, -3.456342680655098, -3.457142678001901, -3.45794267797487, -3.458742680962814, -3.459542673034548, -3.4603426759906597, -3.461142684355991, -3.4619426773758732, -3.4627426822964935, -3.4635426808461034, -3.4643426835066293, -3.465142679232258, -3.465942685953678, -3.466742671656675, -3.4675426842306933, -3.4683426772232906, -3.469142675966168, -3.469942682557985, -3.470742679324985, -3.471542680562152, -3.4723426806192492, -3.4731426827590894, -3.4739426789917616, -3.4747426911792445, -3.475542671920948, -3.4763426745928427, -3.4771426701979635, -3.4779426747388698, -3.4787426823652368, -3.4795426775042415, -3.480342679841897, -3.4811426794283307, -3.4819426737033154, -3.482742667835055, -3.4835426853817353, -3.4843426699774227, -3.4851426842453748, -3.485942669627775, -3.486742679355075, -3.4875426772771334, -3.4883426875387613, -3.489142678844246, -3.4899426810500245, -3.4907426825532184, -3.4915426640588976, -3.4923426620650844, -3.4931426664968512, -3.4939426735684265, -3.494742687331609, -3.4955426748649643, -3.4963426692399935, -3.4971426776621684, -3.4979426790948764, -3.4987426733312077, -3.4995426709031108, -3.500342670512282, -3.5011426786934408, -3.5019426666474374, -3.5027426737349288, -3.503542691552184, -3.5043426714480574, -3.5051427036535188, -3.505942677851408, -3.506742678765704, -3.5075426776154472, -3.5083426728635914, -3.5091426875453635, -3.50994267748888, -3.5107426742604275, -3.511542672002861, -3.512342687885166, -3.513142679402108, -3.5139426837611154, -3.5147426789819747, -3.515542681778925, -3.5163426824112776, -3.5171426774456904, -3.5179426723550478, -3.518742682864513, -3.5195427015617042, -3.520342672378547, -3.5211426904436394, -3.521942672083469, -3.5227426783387727, -3.52354267088117, -3.5243426826843915, -3.5251426855700174, -3.525942675192937, -3.5267426721213724, -3.52754266932493, -3.5283426821649755, -3.529142675571393, -3.5299426868698447, -3.5307426702695466, -3.531542681156452, -3.53234267062021, -3.533142693705713, -3.5339426740154067, -3.5347426761757106, -3.535542655725976, -3.536342677233506, -3.537142695882949, -3.5379426714337114, -3.538742688159573, -3.539542675315488, -3.5403426834193397, -3.5411426759640108, -3.5419426798682707, -3.5427426718990773, -3.5435426755418575, -3.544342678543444, -3.545142679068931, -3.545942683559815, -3.54674267999485, -3.5475426919686015, -3.548342683085366, -3.54914268475909, -3.549942677781246, -3.550742684300303, -3.551542670464869, -3.552342678887044, -3.553142684585282, -3.5539426815728348, -3.5547426789310066, -3.555542673556147, -3.5563426892633743, -3.557142680705283, -3.5579426877654896, -3.5587426739186867, -3.559542678511889, -3.5603426841487362, -3.5611426875823327, -3.561942681784558, -3.5627426824260056, -3.56354268492737, -3.564342679215997, -3.565142674716526, -3.56594267986452, -3.5667426697898463, -3.5675426853788395, -3.5683426735261037, -3.569142677589525, -3.569942694158499, -3.5707426880196635, -3.5715426889157698, -3.572342674575566, -3.57314267282959, -3.57394268832536, -3.5747426879140676, -3.5755426798198187, -3.576342680534026, -3.577142694067561, -3.5779426861097363, -3.5787426819626944, -3.5795426857714574, -3.5803426903214586, -3.5811426982593275, -3.5819426725618086, -3.582742686784286, -3.583542678758249, -3.584342697348575, -3.5851426698229716, -3.5859426873491884, -3.586742690375786, -3.587542686135521, -3.5883426923817296, -3.589142677616337, -3.589942680606555, -3.590742686054682, -3.591542688051277, -3.5923426737178943, -3.593142690716604, -3.593942671724335, -3.5947426844666097, -3.5955426857401562, -3.5963426873775006, -3.59714270035397, -3.597942679790549, -3.5987426846656945, -3.5995426767283334, -3.6003426878698974, -3.6011426826701154, -3.6019426945370014, -3.6027426783255123, -3.603542682250236, -3.6043427000811334, -3.605142672446391, -3.6059426862095734, -3.606742690323017, -3.607542696689734, -3.6083426750644776, -3.6091426796440373, -3.6099426881571617, -3.6107426899354778, -3.6115427140669, -3.6123426699498395, -3.6131426861209093, -3.6139426884585646, -3.614742694052211, -3.6155426583502503, -3.6163426825180522, -3.61714267521279, -3.617942676906978, -3.618742677905402, -3.619542668467375, -3.620342666582701, -3.621142676032605, -3.6219426991681303, -3.6227426536049734, -3.623542676394891, -3.624342689453215, -3.625142686006484, -3.625942657432688, -3.6267426601068564, -3.6275426764052554, -3.6283426822967613, -3.629142683604414, -3.629942685371361, -3.6307426801079146, -3.631542684162241, -3.6323426651404134, -3.6331426680055756, -3.633942681475446, -3.634742684808998, -3.6355426837701543, -3.636342697792543, -3.637142665626243, -3.637942674114356, -3.6387426851649707, -3.63954268337352, -3.6403426718982246, -3.6411426585357276, -3.6419426882764583, -3.6427426952275255, -3.6435426801483572, -3.6443426575181093, -3.645142672195334, -3.6459426735393663, -3.64674267962414, -3.6475426552885892, -3.6483426604524993, -3.649142679058741, -3.649942678169964, -3.6507426650257457, -3.6515426653284067, -3.652342668589199, -3.6531426905855824, -3.653942696083732, -3.6547426698450636, -3.655542664677114, -3.6563426739314764, -3.657142673397402, -3.6579426661035086, -3.6587426683411195, -3.6595426709584444, -3.660342691001688, -3.66114265634792, -3.661942655404573, -3.6627426682537134, -3.663542691500652, -3.664342684859321, -3.665142663409142, -3.6659426781591264, -3.6667426711267126, -3.667542711785927, -3.668342642482685, -3.669142669135681, -3.6699426776146993, -3.670742672262577, -3.6715426881403346, -3.6723426737933096, -3.673142659243922, -3.673942704919, -3.6747426845897735, -3.6755426786919543, -3.676342676534432, -3.6771426629263715, -3.6779426759846956, -3.678742690827903, -3.67954266495758, -3.6803426591666266, -3.6811426901829236, -3.6819426662680144, -3.6827426823322185, -3.683542654617895, -3.6843426899474707, -3.6851426583587, -3.685942671728526, -3.68674266616722, -3.687542672745394, -3.688342698986844, -3.6891426890986168, -3.6899426572438188, -3.690742674506282, -3.691542679465556, -3.692342674816018, -3.693142666016911, -3.6939426742071646, -3.6947426554559115, -3.695542699111911, -3.696342694541954, -3.697142677857528, -3.6979426913683255, -3.698742693919712, -3.6995427054364427, -3.700342669588963, -3.7011426680885506, -3.7019426842050507, -3.702742675960735, -3.7035426925478987, -3.7043426651518985, -3.7051427029120987, -3.70594268664604, -3.706742692164653, -3.707542642913495, -3.7083426906667682, -3.709142669016501, -3.7099426870292973, -3.7107426627028417, -3.711542658614917, -3.712342669599593, -3.7131426790040223, -3.713942691987313, -3.7147426418948726, -3.7155426667789015, -3.716342682017739, -3.7171426840347976, -3.7179426544810212, -3.7187426672596757, -3.7195426717801183, -3.720342693901557, -3.7211426858891627, -3.721942677456127, -3.72274266091722, -3.7235427010762123, -3.724342695239784, -3.725142680347062, -3.725942675918077, -3.7267426922301183, -3.727542685779781, -3.7283426806004627, -3.7291426464514643, -3.7299426867241436, -3.730742694311857, -3.73154270176542, -3.7323426737577847, -3.733142675783938, -3.7339426958453714, -3.734742700272591, -3.735542668504195, -3.7363426844228798, -3.7371426820993747, -3.7379426920585956, -3.7387426882685304, -3.7395426682371635, -3.7403426886896796, -3.7411426706910333, -3.7419426937401568, -3.7427426688816468, -3.743542687485615, -3.7443426823767822, -3.745142677263402, -3.745942708688972, -3.7467426789601177, -3.747542648806075, -3.7483427058157304, -3.74914267481131, -3.749942624698406, -3.750742687940374, -3.7515426761876824, -3.752342681090113, -3.753142651333974, -3.7539426755108707, -3.754742706947809, -3.7555426778260426, -3.756342722814452, -3.757142697539848, -3.7579426635568325, -3.75874270543477, -3.7595426656105246, -3.760342672541128, -3.761142673985205, -3.761942699067049, -3.7627427006793823, -3.7635427061866267, -3.764342653640824, -3.7651426839818214, -3.7659426601169343, -3.7667427221470007, -3.7675426527641775, -3.768342680554042, -3.769142711474842, -3.7699427095265037, -3.7707426933650368, -3.771542711475604, -3.772342653663827, -3.773142696023797, -3.7739426522614394, -3.774742629187813, -3.775542669462766, -3.776342664504, -3.777142709892587, -3.7779426769714064, -3.778742625607947, -3.779542688581614, -3.7803426544348895, -3.7811426655355262, -3.781942735732855, -3.782742670590551, -3.7835426549452222, -3.7843426953543258, -3.785142657433198, -3.7859426881175295, -3.7867426611967403, -3.7875426367088494, -3.7883427019562532, -3.7891426528688044, -3.7899426828232663, -3.79074265368331, -3.7915427520067624, -3.7923426812642447, -3.7931426564148296, -3.79394268151259, -3.7947426872403867, -3.7955426703922512, -3.796342675412916, -3.797142635827413, -3.797942667766847, -3.7987426668394164, -3.799542648608849, -3.800342678233619, -3.8011426452442265, -3.8019427120468663, -3.8027426942414877, -3.8035426379440196, -3.80434271904619, -3.8051426773574804, -3.8059427216728636, -3.8067426818122385, -3.8075426449461247, -3.8083426897344452, -3.8091426847029197, -3.8099426785913693, -3.81074267635654, -3.8115426899537397, -3.812342687143655, -3.8131426909205857, -3.8139426625582473, -3.8147426769126014, -3.8155426397258907, -3.816342727262736, -3.817142663502864, -3.817942648721555, -3.818742705037721, -3.8195426360459805, -3.8203427125824874, -3.821142670177551, -3.8219426564717196, -3.8227426889750404, -3.8235426558833296, -3.8243426324754637, -3.8251426777094366, -3.8259426783736217, -3.8267426801019155, -3.827542675043105, -3.828342631433088, -3.8291426740704537, -3.829942687497123, -3.830742718402007, -3.8315426559677235, -3.8323426906310942, -3.8331426984279915, -3.8339426874824767, -3.834742655200216, -3.8355426392774916, -3.8363426806529333, -3.837142661210464, -3.837942647468253, -3.8387426472570496, -3.8395427214265965, -3.8403426855904854, -3.8411427043763524, -3.841942699135643, -3.8427426741088766, -3.8435427096362673, -3.8443427176400746, -3.845142736726075, -3.8459426676161, -3.8467426614909073, -3.8475427078799385, -3.84834269667067, -3.849142640245873, -3.849942679820515, -3.8507426692524405, -3.851542701326025, -3.852342701655971, -3.8531426813267444, -3.85394268834375, -3.854742680154004, -3.855542707786981, -3.856342657162486, -3.857142621990306, -3.857942743198919, -3.858742646924611, -3.8595426606218552, -3.8603426872498403, -3.8611427091097994, -3.861942673967178, -3.8627426652226404, -3.863542685490984, -3.864342687630824, -3.8651426701119362, -3.86594274140748, -3.8667427379220953, -3.8675426503016297, -3.8683426849536318, -3.8691426627326564, -3.8699426952837257, -3.870742733439556, -3.8715426909323014, -3.872342686773891, -3.873142658693496, -3.873942673488955, -3.874742668132285, -3.8755426404839, -3.876342690181218, -3.8771427238441447, -3.877942662403484, -3.8787426860665164, -3.879542678088228, -3.880342697158312, -3.881142649023559, -3.881942666383793, -3.8827426889918115, -3.883542691820594, -3.8843426637447465, -3.8851426844064463, -3.885942652183303, -3.8867427386469444, -3.887542658702614, -3.8883426755853634, -3.8891427265514267, -3.889942644080975, -3.890742745689977, -3.8915427309632378, -3.892342657785548, -3.893142671441865, -3.8939426600757088, -3.89474263697025, -3.895542770916336, -3.8963426960447123, -3.897142710487742, -3.897942644008481, -3.8987425948027976, -3.8995426753638185, -3.9003426958595355, -3.9011427244929564, -3.9019427135656315, -3.9027427328267095, -3.9035427947044354, -3.904342720962859, -3.9051427881634027, -3.9059427616587072, -3.906742714622169, -3.907542798878012, -3.908342831733762, -3.9091427166874837, -3.9099426751874944, -3.910742637746125, -3.9115427821263893, -3.9123427892775453, -3.913142831298728, -3.91394269070247, -3.9147426842384903, -3.9155428141305038, -3.916342686133021, -3.9171427104145096, -3.9179427131091416, -3.9187426859268726, -3.9195426553089874, -3.92034272118849, -3.9211427839529733, -3.921942697851364, -3.9227426686932176, -3.9235426738935075, -3.9243427844428425, -3.9251427398983196, -3.92594276216073, -3.926742766576581, -3.9275427366840177, -3.928342806176488, -3.9291426771148963, -3.9299427389403263, -3.9307427216465385, -3.931542667986605, -3.9323428362706636, -3.9331427872878066, -3.9339427441984753, -3.934742687539483, -3.935542782438688, -3.93634276409216, -3.937142740372792, -3.9379427898541053, -3.9387427363010374, -3.939542705192025, -3.940342814506721, -3.9411428618961963, -3.941942670720664, -3.942742742755172, -3.943542708317409, -3.9443426485365762, -3.945142700102906, -3.945942716642321, -3.9467426979115316, -3.947542741433381, -3.9483426723120374, -3.9491427748100705, -3.9499427172052037, -3.950742797520661, -3.951542666362684, -3.952342742130668, -3.953142797589635, -3.953942736289946, -3.954742758791099, -3.9555426755202916, -3.956342694801833, -3.957142797295319, -3.9579427230057718, -3.958742790729275, -3.9595427458687027, -3.960342702065418, -3.961142777824307, -3.9619427046193323, -3.9627427298194107, -3.963542713173638, -3.9643427592375247, -3.9651428535773903, -3.965942738176409, -3.966742791172919, -3.9675427091481197, -3.9683426888962003, -3.96914272163599, -3.96994270384198, -3.9707427238920445, -3.971542689693024, -3.97234267020508, -3.9731426160790306, -3.9739427757729118, -3.9747427402414814, -3.9755426523640836, -3.9763426686374714, -3.9771427214202504, -3.9779427063888306, -3.9787427409567044, -3.979542696857834, -3.98034268875449, -3.98114271454574, -3.9819427406712293, -3.982742824583738, -3.9835427420609903, -3.984342737666111, -3.985142724460502, -3.9859427360545396, -3.986742711321085, -3.9875427652998496, -3.9883426377207343, -3.9891427848817784, -3.9899428211595023, -3.9907428438311854, -3.991542737916234, -3.992342595009859, -3.9931426941609516, -3.9939427717865783, -3.9947428158177445, -3.9955427683833022, -3.9963426756241915, -3.9971427750549537, -3.997942769229894, -3.9987428276469927, -3.9995427553901663, -4.000342704676996, -4.00114267631011, -4.001942660933082, -4.00274275278548, -4.003542812653222, -4.004342854606193, -4.0051427161381525, -4.005942791810639, -4.006742765374156, -4.007542733194214, -4.008342728919843, -4.009142708965783, -4.0099426718791165, -4.0107428567341685, -4.011542761494411, -4.012342680990741, -4.013142748152632, -4.013942693128456, -4.014742823966344, -4.015542812920785, -4.016342679868785, -4.01714265118585, -4.017942697304306, -4.018742702077134, -4.019542794702602, -4.020342673010191, -4.021142696736888, -4.021942652763073, -4.022742654375406, -4.023542697080984, -4.024342743106217, -4.0251428040062365, -4.0259427170792605, -4.026742611457621, -4.027542804914219, -4.0283428339932925, -4.0291428160014675, -4.029942748596795, -4.030742780918217, -4.031542748199399, -4.032342760789334, -4.033142685940447, -4.033942625452482, -4.034742590591804, -4.035542905331795, -4.036342762400409, -4.0371428709488555, -4.0379427146388025, -4.038742806593518, -4.039542677277268, -4.040342560036834, -4.041142665508914, -4.041942678815076, -4.0427426078179, -4.043542663877133, -4.044342804694452, -4.045142931917098, -4.045942873054855, -4.046742784224762, -4.047542824411039, -4.048342673501111, -4.049142663615157, -4.0499425859286475, -4.050742714908893, -4.05154255014736, -4.052342749390618, -4.053142773267382, -4.053942783483535, -4.0547427887224785, -4.055542945935713, -4.056342542133962, -4.057142550226445, -4.057942763921574, -4.05874269382025, -4.059542722587821, -4.060342701826585, -4.061142653223442, -4.061942671534098, -4.062742863790163, -4.063542735237888, -4.064342854943561, -4.065142809489544, -4.065942711566777, -4.0667426336256085, -4.067542711569558, -4.06834262074085, -4.069142887602766, -4.0699427387141895, -4.070742762413602, -4.071542741152143, -4.072342913788134, -4.0731427186835845, -4.0739426319385075, -4.074742604824451, -4.075542621432078, -4.076342646729927, -4.077142812235479, -4.07794266859014, -4.078742741013457, -4.079543054104988, -4.080342789792439, -4.081142858973408, -4.081942704086714, -4.08274278779686, -4.083542657921271, -4.08434274570368, -4.085142840923481, -4.085942776968068, -4.086742760151765, -4.087542766375236, -4.088342866328958, -4.089142735768974, -4.089942761348766, -4.0907424688327865, -4.091542736535985, -4.092342732614043, -4.093142573002524, -4.093942642210777, -4.094742791877479, -4.095542888559294, -4.0963427690292065, -4.097142838899117, -4.097942784472934, -4.098742779327722, -4.099542708119088, -4.100342388118179, -4.101142547909831, -4.101942774251484, -4.102742860712851, -4.103542752860676, -4.104342748422596, -4.1051426343176445, -4.1059428015444155, -4.106742795735272, -4.107542655630141, -4.108342863620464, -4.109142551084233, -4.109942835056017, -4.110742757112575, -4.111542887986843, -4.112342905447122, -4.11314272333243, -4.113942980840193, -4.114742662917479, -4.1155427696514835, -4.11634263578776, -4.117142735086645, -4.117942569392881, -4.118742692813839, -4.119542841796147, -4.120342729260074, -4.121142871725851, -4.121942739972155, -4.122742686530501, -4.12354264560804, -4.124342499998193, -4.125142600277059, -4.125942753838672, -4.1267430999198496, -4.127542799793673, -4.128342842376469, -4.129142697937596, -4.129942683119907, -4.130742639707705, -4.1315427464530785, -4.1323427577674465, -4.133142651991193, -4.133942624888505, -4.134742765451165, -4.135542697925985, -4.136342629770979, -4.137142795369755, -4.137942483538382, -4.138742751671316, -4.139542539390959, -4.140342734839351, -4.141142641357192, -4.141942719289773, -4.1427426610596285, -4.143542863358789, -4.144342857904348, -4.145142867690765, -4.145942758769934, -4.146742820740883, -4.147542742974792, -4.148342645522689, -4.149142651555167, -4.149942692746436, -4.150742823304654, -4.151542835853661, -4.152342994171931, -4.153142684391469, -4.153942800766117, -4.154742658137138, -4.155542805891628, -4.156342656352763, -4.157142597317716, -4.15794262262466, -4.1587427155889145, -4.159542769190239, -4.1603427723782715, -4.1611427044892935, -4.161942668362144, -4.1627428308527215, -4.163542970801473, -4.164342648292632, -4.165142613904891, -4.165942639523337, -4.166742719547756, -4.167542718352024, -4.16834284718675, -4.1691429247805445, -4.169942924448833, -4.170742623963406, -4.171542675577484, -4.172342712937507, -4.173142910022989, -4.173942724718245, -4.174742719961841, -4.175542613519383, -4.176342901772614, -4.177142767752002, -4.177943010018907, -4.178742467096299, -4.179542730236108, -4.180342584762684, -4.181142713449617, -4.181942716280673}
        ),  // These values are for the grid np.linspace(0, 4, 501), with step size 0.008
        _unit_entropy_cv_per_mean_step_size(0.0008)
    {
        int cache_size = _flow_field->_flow_field_unravelled.size() * _n_steps;

        _cached_missing_unravelled.resize(cache_size, 0);
        _cached_hom_unravelled.resize(cache_size, 0);
        _cached_hom_stretch_hom_site_unravelled.resize(cache_size, 0);
        _cached_hom_stretch_het_site_unravelled.resize(cache_size, 0);
        _cached_hom_site_hom_stretch_unravelled.resize(cache_size, 0);
        _cached_het_site_hom_stretch_unravelled.resize(cache_size, 0);

        size_t flat_n_elements = (
            _mean_n_steps * _cv_n_steps *           // Flow field grid size
            _n_steps *                              // Number of cached steps
            2 *                                     // Two grids (alpha and beta)
            4                                       // 4 grid points to interpolate from
            );

        _cached_missing_flat = aligned_alloc_float(flat_n_elements);
        _cached_hom_flat = aligned_alloc_float(flat_n_elements);
        _cached_hom_stretch_hom_site_flat = aligned_alloc_float(flat_n_elements);
        _cached_hom_stretch_het_site_flat = aligned_alloc_float(flat_n_elements);
        _cached_hom_site_hom_stretch_flat = aligned_alloc_float(flat_n_elements);
        _cached_het_site_hom_stretch_flat = aligned_alloc_float(flat_n_elements);

        _lookup_forward[0] = _cached_missing_flat;
        _lookup_forward[1] = _cached_hom_stretch_hom_site_flat;
        _lookup_forward[2] = _cached_hom_stretch_het_site_flat;
        _lookup_forward[3] = _cached_hom_flat;
        
        _lookup_backward[0] = _cached_missing_flat;
        _lookup_backward[1] = _cached_hom_site_hom_stretch_flat;
        _lookup_backward[2] = _cached_het_site_hom_stretch_flat;
        _lookup_backward[3] = _cached_hom_flat;

        _wm_mult = _mm256_setr_ps(-1, -1, 1, 1, -1, -1, 1, 1);
        _wm_add = _mm256_setr_ps(1, 1, 0, 0, 1, 1, 0, 0);
        _wc_mult = _mm256_setr_ps(-1, 1, -1, 1, -1, 1, -1, 1);
        _wc_add = _mm256_setr_ps(1, 0, 1, 0, 1, 0, 1, 0);

        _mean_step_recip_v = _mm256_set1_ps(_mean_step_recip);
        _mean_min_log10_times_mean_step_recip_v = _mm256_set1_ps(_mean_min_log10 * _mean_step_recip);
        _cv_step_recip_v = _mm256_set1_ps(_cv_step_recip);
        _cv_min_log10_times_cv_step_recip_v = _mm256_set1_ps(_cv_min_log10 * _cv_step_recip);
        
        _shift_n_step_coef = _mm256_set1_epi32(2 * 4 * _mean_n_steps * _cv_n_steps);
        _shift_m0_coef =_mm256_set1_epi32(2 * 4 * _cv_n_steps);
        _shift_c0_coef = _mm256_set1_epi32(2 * 4);        

        preprocess();           
    }

    virtual ~FlowFieldCache() {
        free(_cached_missing_flat);
        free(_cached_hom_flat);
        free(_cached_hom_stretch_hom_site_flat);
        free(_cached_hom_stretch_het_site_flat);
        free(_cached_hom_site_hom_stretch_flat);
        free(_cached_het_site_hom_stretch_flat);
    }

    // TODO: Replace with a robust logaddexp, or better of, a cache
    float add_const(float x, float const_to_add) {
        return std::log10(std::pow(10, x) + const_to_add);
    }

    // void mean_cv_to_alpha_beta(
    //     float mean_log10, 
    //     float cv_log10,
    //     float& alpha,
    //     float& beta
    // ) {
    //     // mean_log10 = log10(alpha / beta) = log10(alpha) - log10(beta)
    //     // cv_log10 = log10(1 / sqrt(alpha)) = -0.5 * log10(alpha)
    //     // -->
    //     // log10(alpha) = cv_log10 / -0.5
    //     // log10(beta) = log10(alpha) - mean_log10

    //     float alpha_log10 = cv_log10 / -0.5;
    //     float beta_log10 = alpha_log10 - mean_log10;
    //     alpha = std::pow(10, alpha_log10);
    //     beta = std::pow(10, beta_log10);
    // }

    void mean_cv_to_alpha_beta_log10(
        float mean_log10, 
        float cv_log10,
        float& alpha_log10,
        float& beta_log10
    ) {
        // mean_log10 = log10(alpha / beta) = log10(alpha) - log10(beta)
        // cv_log10 = log10(1 / sqrt(alpha)) = -0.5 * log10(alpha)
        // -->
        // log10(alpha) = cv_log10 / -0.5
        // log10(beta) = log10(alpha) - mean_log10

        alpha_log10 = cv_log10 / -0.5;
        beta_log10 = alpha_log10 - mean_log10;
    }

    void alpha_beta_to_mean_cv_log10(
        float alpha_log10,
        float beta_log10,
        float& mean_log10, 
        float& cv_log10
    ) {
        // mean_log10 = log10(alpha / beta) = log10(alpha) - log10(beta)
        // cv_log10 = log10(1 / sqrt(alpha)) = -0.5 * log10(alpha)
        // -->
        // log10(alpha) = cv_log10 / -0.5
        // log10(beta) = log10(alpha) - mean_log10
        mean_log10 = alpha_log10 - beta_log10;
        cv_log10 = -0.5 * alpha_log10;
    }    

    // void clip_alpha_beta_log10(
    //     float alpha_log10, 
    //     float beta_log10,
    //     float& clipped_alpha_log10,
    //     float& clipped_beta_log10        
    // ) {
    //     float mean_log10 = alpha_log10 - beta_log10;
    //     float cv_log10 = -0.5 * alpha_log10;

    //     mean_log10 = min(max(mean_log10, _mean_min_log10), _mean_max_log10);
    //     cv_log10 = min(max(cv_log10, _cv_min_log10), _cv_max_log10);  

    //     mean_cv_to_alpha_beta_log10(mean_log10, cv_log10, clipped_alpha_log10, clipped_beta_log10);
    // }

    // This has to be double for accuracy
    double differential_entropy(
        float mean_log10, 
        float cv_log10
    ) {
        float alpha_log10, beta_log10;

        // Convert to alpha and beta
        mean_cv_to_alpha_beta_log10(mean_log10, cv_log10, alpha_log10, beta_log10);

        // Convert to real-scale
        double alpha = std::pow(10, alpha_log10);
        double beta = std::pow(10, beta_log10);

        // Differential entropy
        double de = alpha - std::log(beta) + boost::math::lgamma(alpha) + (1-alpha) * boost::math::digamma(alpha);
        // cout << boost::format("------\t\t a - ln(b) + lgamma(a) + (1-a) * psi(a) = %f - %f + %f + %f * %f = %f\n")
        //     % alpha % std::log(beta) % boost::math::lgamma(alpha) % (1-alpha) % boost::math::digamma(alpha) % de;

        return de;
    }

    void clip_mean_cv_log10(
        float mean_log10, 
        float cv_log10,
        float& clipped_mean_log10,
        float& clipped_cv_log10        
    ) {
        clipped_mean_log10 = min(max(mean_log10, _mean_min_log10), _mean_max_log10);
        clipped_cv_log10 = min(max(cv_log10, _cv_min_log10), _cv_max_log10);

        float interpolation_solution;

        if (_entropy_clipping) {  
            // If we need to do entropy clipping, increase the CV until the entropy is below 1.
            double current_de = differential_entropy(clipped_mean_log10, clipped_cv_log10);
            
            if (current_de > 1) {

                if (clipped_mean_log10 > 4) {
                    cerr << "Entropy clipping limited at 0 <= log10(mean) < 4\n";
                    exit(-1);
                }            

                if (clipped_mean_log10 >= 0) {
                    int array_index = int(clipped_mean_log10 / _unit_entropy_cv_per_mean_step_size);
                    float w = (clipped_mean_log10 - (array_index * _unit_entropy_cv_per_mean_step_size)) / _unit_entropy_cv_per_mean_step_size;
                    interpolation_solution = _unit_entropy_cv_per_mean[array_index] * (1-w) + _unit_entropy_cv_per_mean[array_index+1] * w;

                    // Clip again. This may result in entropy > 1 for mean>2, but ce la vie
                    interpolation_solution = min(max(interpolation_solution, _cv_min_log10), _cv_max_log10);
                    clipped_cv_log10 = interpolation_solution; 
                }    
                
                /*
                float orig_cv = clipped_cv_log10;                

                // First, find a lower bound with low entropy
                float legal_cv_10 = clipped_cv_log10;
                double new_de, mid_de;
                float mid_cv_10;
                float threshold = 1 - 0.001;

                // cout << boost::format("Problem with h(%f, %f) = %f\n") % clipped_mean_log10 % clipped_cv_log10 % current_de;

                do {
                    legal_cv_10 -= 1;
                    new_de = differential_entropy(clipped_mean_log10, legal_cv_10);
                    // cout << boost::format("\t reduced to %f\n") % legal_cv_10;
                } while (new_de > 1);

                // Then, binary search until the entropy is legal                
                
                int cutit = 0;
                while (new_de < threshold) {                    
                    mid_cv_10 = (clipped_cv_log10 + legal_cv_10) / 2.0;                    
                    mid_de = differential_entropy(clipped_mean_log10, mid_cv_10);
                    current_de = differential_entropy(clipped_mean_log10, clipped_cv_log10);

                    // cout << boost::format("\t\t bot = %f, h(%f, %f) = %f\n") % legal_cv_10 % clipped_mean_log10 % legal_cv_10 % new_de;
                    // cout << boost::format("\t\t mid = %f, h(%f, %f) = %f\n") % mid_cv_10 % clipped_mean_log10 % mid_cv_10 % mid_de;
                    // cout << boost::format("\t\t top = %f, h(%f, %f) = %f\n") % clipped_cv_log10 % clipped_mean_log10 % clipped_cv_log10 % current_de;
                    // cout << "\n";

                    if (mid_de > 1) {
                        clipped_cv_log10 = mid_cv_10;
                    } else if (mid_de < threshold) {
                        legal_cv_10 = mid_cv_10;                        
                    } else {
                        legal_cv_10 = mid_cv_10;                        
                    }

                    new_de = differential_entropy(clipped_mean_log10, legal_cv_10);                    

                    // cutit++;
                    // if (cutit == 20) { exit(-1); }

                } 
                clipped_cv_log10 = legal_cv_10;
                
                // Clip again just in case
                clipped_cv_log10 = min(max(clipped_cv_log10, _cv_min_log10), _cv_max_log10);
                
                
                
                if (abs(interpolation_solution - clipped_cv_log10) > 0.01) {
                    cout << boost::format("Problem with h(%f, %f) = %f\n") % clipped_mean_log10 % orig_cv % differential_entropy(clipped_mean_log10, orig_cv);
                    cout << boost::format("\t Interpolation solution: %f -> %f\n") % interpolation_solution % differential_entropy(clipped_mean_log10, interpolation_solution);
                    cout << boost::format("\t Binary search solution: %f -> %f\n") % clipped_cv_log10 % differential_entropy(clipped_mean_log10, clipped_cv_log10);
                }                
                */
            }
            
            
            
        }
    }

    int unravel_entry(int row, int col, int n_step, int component) {
        return ((2 * n_step + component) * _mean_n_steps + row) * _cv_n_steps + col;        
        
        // component should be 0 or 1
        // return (
        //     _cv_n_steps * _mean_n_steps * 2 * n_step +          // Matrices before this step
        //     _cv_n_steps * _mean_n_steps * component +           // First or second matrix for this step?
        //     _cv_n_steps * row +                                 // How many rows before the entry
        //     col
        // );
    }

    // void get_missing(int row, int col, int n_step, float& alpha, float& beta) {
    //     alpha = _cached_missing_unravelled[unravel_entry(row, col, n_step, 0)];
    //     beta = _cached_missing_unravelled[unravel_entry(row, col, n_step, 1)];
    // }

    // void get_hom(int row, int col, int n_step, float& alpha, float& beta) {
    //     alpha = _cached_hom_unravelled[unravel_entry(row, col, n_step, 0)];
    //     beta = _cached_hom_unravelled[unravel_entry(row, col, n_step, 1)];
    // }

    void get_unravelled(const vector<float>& vec, int row, int col, int n_step, float& alpha, float& beta) {
        alpha = vec[unravel_entry(row, col, n_step, 0)];
        beta = vec[unravel_entry(row, col, n_step, 1)];
    }

    void preprocess() {
        float mean_log10, cv_log10;
        float conv_mean_log10, conv_cv_log10;
        float updated_mean_log10, updated_cv_log10;
        float alpha_log10, beta_log10;

        //float alpha, beta;
        float u, v;
        //float clipped_alpha, clipped_beta;

        BlockProgressBar bar{
            option::BarWidth{70},
            option::FontStyles{
                std::vector<FontStyle>{FontStyle::bold}},
            option::ShowElapsedTime{true},
            option::ShowRemainingTime{true},                
            option::MaxProgress{_n_steps * 3 - 1}
        };

        // The first step builds off the flow field
        mean_log10 = _mean_min_log10;
        for (int row = 0; row < _mean_n_steps; row++) {
            cv_log10 = _cv_min_log10;
            for (int col = 0; col < _cv_n_steps; col++) {

                // // Convert to alpha, beta
                // mean_cv_to_alpha_beta_log10(mean_log10, cv_log10, alpha, beta);

                // Get update coefficients
                _flow_field->_entry(row, col, u, v);

                // // Updated alpha beta
                // alpha = max(alpha + u * _scaled_recombination_rate, _min_alpha);
                // beta = max(beta + v * _scaled_recombination_rate, _min_beta);

                // clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta);

                clip_mean_cv_log10(
                    mean_log10 + u * _scaled_recombination_rate,
                    cv_log10 + v * _scaled_recombination_rate,
                    updated_mean_log10,
                    updated_cv_log10
                );

                // Enter in the missing
                _cached_missing_unravelled[unravel_entry(row, col, 0, 0)] = updated_mean_log10; //clipped_alpha;
                _cached_missing_unravelled[unravel_entry(row, col, 0, 1)] = updated_cv_log10; //clipped_beta;                

                // Enter in the hom
                _cached_hom_unravelled[unravel_entry(row, col, 0, 0)] = updated_mean_log10; //clipped_alpha;
                _cached_hom_unravelled[unravel_entry(row, col, 0, 1)] = updated_cv_log10; //clipped_beta;

                cv_log10 += _cv_step;
            }            
            mean_log10 += _mean_step;
        }


        for (int n_step = 1; n_step < _n_steps; n_step++) {
            for (int row = 0; row < _mean_n_steps; row++) {
                for (int col = 0; col < _cv_n_steps; col++) {
                    // 
                    // For missing:
                    //

                    // Take the previous alpha, beta
                    // alpha = _cached_missing_unravelled[unravel_entry(row, col, n_step-1, 0)];
                    // beta  = _cached_missing_unravelled[unravel_entry(row, col, n_step-1, 1)];
                    mean_log10 = _cached_missing_unravelled[unravel_entry(row, col, n_step-1, 0)];
                    cv_log10   = _cached_missing_unravelled[unravel_entry(row, col, n_step-1, 1)];

                    // This is "missing", so no observation update, just next step
                    // Get update coefficients
                    _flow_field->at(mean_log10, cv_log10, u, v);
                    // _flow_field->at_log10_alpha_beta(alpha, beta, u, v);

                    // Updated alpha beta
                    // alpha = max(alpha + u * _scaled_recombination_rate, _min_alpha);
                    // beta = max(beta + v * _scaled_recombination_rate, _min_beta);
                    // clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta);
                    clip_mean_cv_log10(
                        mean_log10 + u * _scaled_recombination_rate,
                        cv_log10 + v * _scaled_recombination_rate,
                        updated_mean_log10,
                        updated_cv_log10
                    );

                     // Enter in the missing
                    // _cached_missing_unravelled[unravel_entry(row, col, n_step, 0)] = clipped_alpha;
                    // _cached_missing_unravelled[unravel_entry(row, col, n_step, 1)] = clipped_beta;
                    _cached_missing_unravelled[unravel_entry(row, col, n_step, 0)] = updated_mean_log10;
                    _cached_missing_unravelled[unravel_entry(row, col, n_step, 1)] = updated_cv_log10;

                    //
                    // For hom
                    //

                    // Take the previous alpha, beta
                    // alpha = _cached_hom_unravelled[unravel_entry(row, col, n_step-1, 0)];
                    // beta  = _cached_hom_unravelled[unravel_entry(row, col, n_step-1, 1)];
                    mean_log10 = _cached_hom_unravelled[unravel_entry(row, col, n_step-1, 0)];
                    cv_log10   = _cached_hom_unravelled[unravel_entry(row, col, n_step-1, 1)];

                    // Convert to alpha, beta, update and back
                    mean_cv_to_alpha_beta_log10(
                        mean_log10,
                        cv_log10,
                        alpha_log10,
                        beta_log10
                    );

                    // Update hom observation
                    beta_log10 = add_const(beta_log10,  _scaled_mutation_rate);

                    alpha_beta_to_mean_cv_log10(                        
                        alpha_log10,
                        beta_log10,
                        mean_log10,
                        cv_log10
                    );

                    clip_mean_cv_log10(
                        mean_log10,
                        cv_log10,
                        conv_mean_log10,
                        conv_cv_log10
                    );

                    // Get update coefficients
                    _flow_field->at(conv_mean_log10, conv_cv_log10, u, v);

                    // Updated alpha beta
                    // alpha = max(alpha + u * _scaled_recombination_rate, _min_alpha);
                    // beta = max(beta + v * _scaled_recombination_rate, _min_beta);

                    // clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta);
                    clip_mean_cv_log10(
                        conv_mean_log10 + u * _scaled_recombination_rate,
                        conv_cv_log10 + v * _scaled_recombination_rate,
                        updated_mean_log10,
                        updated_cv_log10
                    );

                    // Enter in the hom
                    _cached_hom_unravelled[unravel_entry(row, col, n_step, 0)] = updated_mean_log10; //clipped_alpha;
                    _cached_hom_unravelled[unravel_entry(row, col, n_step, 1)] = updated_cv_log10; //clipped_beta;

                }                
            }

            bar.tick();
        }

        flatten(_cached_missing_unravelled, _cached_missing_flat);
        flatten(_cached_hom_unravelled,     _cached_hom_flat);

        // Now go over it again and add an emission step after
        for (int n_step = 0; n_step < _n_steps; n_step++) {
            for (int row = 0; row < _mean_n_steps; row++) {
                for (int col = 0; col < _cv_n_steps; col++) {                   
                    // alpha = _cached_hom_unravelled[unravel_entry(row, col, n_step, 0)];
                    // beta  = _cached_hom_unravelled[unravel_entry(row, col, n_step, 1)];
                    mean_log10 = _cached_hom_unravelled[unravel_entry(row, col, n_step, 0)];
                    cv_log10   = _cached_hom_unravelled[unravel_entry(row, col, n_step, 1)];

                    // Update hom observation
                    // beta = add_const(beta, _scaled_mutation_rate);
                    // Convert to alpha, beta, update and back
                    mean_cv_to_alpha_beta_log10(
                        mean_log10,
                        cv_log10,
                        alpha_log10,
                        beta_log10
                    );

                    // Update hom observation
                    beta_log10 = add_const(beta_log10,  _scaled_mutation_rate);

                    alpha_beta_to_mean_cv_log10(                        
                        alpha_log10,
                        beta_log10,
                        mean_log10,
                        cv_log10
                    );

                    // clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta);
                    clip_mean_cv_log10(
                        mean_log10,
                        cv_log10,
                        updated_mean_log10,
                        updated_cv_log10
                    );

                    // Enter
                    _cached_hom_stretch_hom_site_unravelled[unravel_entry(row, col, n_step, 0)] = updated_mean_log10; //clipped_alpha;
                    _cached_hom_stretch_hom_site_unravelled[unravel_entry(row, col, n_step, 1)] = updated_cv_log10; //clipped_beta;

                    // Update het observation
                    // alpha = add_const(alpha, 1);
                    alpha_log10 = add_const(alpha_log10, 1);

                    alpha_beta_to_mean_cv_log10(                        
                        alpha_log10,
                        beta_log10,
                        mean_log10,
                        cv_log10
                    );

                    //clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta); 
                    clip_mean_cv_log10(
                        mean_log10,
                        cv_log10,
                        updated_mean_log10,
                        updated_cv_log10
                    );

                    // Enter
                    _cached_hom_stretch_het_site_unravelled[unravel_entry(row, col, n_step, 0)] = updated_mean_log10; //clipped_alpha;
                    _cached_hom_stretch_het_site_unravelled[unravel_entry(row, col, n_step, 1)] = updated_cv_log10; //clipped_beta;
                }                
            }

            bar.tick();
        }

        flatten(_cached_hom_stretch_hom_site_unravelled, _cached_hom_stretch_hom_site_flat);
        flatten(_cached_hom_stretch_het_site_unravelled, _cached_hom_stretch_het_site_flat);

        // Go over it again and add an emission step before
        for (int n_step = 0; n_step < _n_steps; n_step++) {
            mean_log10 = _mean_min_log10;
            for (int row = 0; row < _mean_n_steps; row++) {
                cv_log10 = _cv_min_log10;
                for (int col = 0; col < _cv_n_steps; col++) {  

                    mean_cv_to_alpha_beta_log10(mean_log10, cv_log10, alpha_log10, beta_log10);

                    // if ((n_step == 999) && (row == 5) && (col >= 8)) {
                    //     cout << boost::format("*** %d %d mean_log10, cv_log10 alpha_log10, beta_log10) = %f %f %f %f \n")
                    //         % row % col % mean_log10 % cv_log10 % alpha_log10 % beta_log10;
                    // }

                    // hom 
                    //beta = add_const(beta, _scaled_mutation_rate);
                    beta_log10 = add_const(beta_log10,  _scaled_mutation_rate);

                    // if ((n_step == 999) && (row == 5) && (col >= 8)) {
                    //     cout << boost::format("*** %d %d alpha_log10, beta_log10 = %f %f\n")
                    //         % row % col % alpha_log10 % beta_log10;
                    // } 

                    //clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta); 
                    alpha_beta_to_mean_cv_log10(                        
                        alpha_log10,
                        beta_log10,
                        conv_mean_log10,
                        conv_cv_log10
                    );

                    // if ((n_step == 999) && (row == 5) && (col >= 8)) {
                    //     cout << boost::format("*** conv %d %d %f %f\n")
                    //         % row % col % conv_mean_log10 % conv_cv_log10;
                    // }                 


                    //clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta); 
                    clip_mean_cv_log10(
                        conv_mean_log10,
                        conv_cv_log10,
                        updated_mean_log10,
                        updated_cv_log10
                    );

                    // if ((n_step == 999) && (row == 5) && (col>= 8)) {
                    //     cout << boost::format("*** updated %d %d %f %f\n")
                    //         % row % col % updated_mean_log10 % updated_cv_log10;
                    // } 



                    // at_log10_alpha_beta(
                    //     clipped_alpha, clipped_beta, n_step, HOM_STRETCH,                         
                    //     _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 0)], 
                    //     _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 1)]
                    // );

                    // at(
                    //     updated_mean_log10, updated_cv_log10, n_step, HOM_STRETCH,                         
                    //     _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 0)], 
                    //     _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 1)]
                    // );

                    at_flat(
                        updated_mean_log10, updated_cv_log10, n_step, HOM_STRETCH, false, u, v
                    );

                    _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 0)] = u;
                    _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 1)] = v;

                    // if ((n_step == 999) && (row == 5) && (col >= 8)) {
                    //     cout << boost::format("*** %d %d %f %f at %d %d\n")
                    //         % row % col 
                    //         % _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 0)] 
                    //         % _cached_hom_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 1)]
                    //         % unravel_entry(row, col, n_step, 0)
                    //         % unravel_entry(row, col, n_step, 1);
                    // } 

                    // het
                    //alpha = add_const(alpha, 1);
                    alpha_log10 = add_const(alpha_log10, 1);

                    //  if ((n_step == 999) && (row == 5) && (col == 9)) {
                    //     cout << boost::format("*** %d %d %f %f\n")
                    //         % row % col % alpha_log10 % beta_log10;
                    // } 

                    alpha_beta_to_mean_cv_log10(                        
                        alpha_log10,
                        beta_log10,
                        conv_mean_log10,
                        conv_cv_log10
                    );

                    // if ((n_step == 999) && (row == 5) && (col == 9)) {
                    //     cout << boost::format("*** conv %d %d %f %f\n")
                    //         % row % col % conv_mean_log10 % conv_cv_log10;
                    // } 


                    //clip_alpha_beta_log10(alpha, beta, clipped_alpha, clipped_beta); 
                    clip_mean_cv_log10(
                        conv_mean_log10,
                        conv_cv_log10,
                        updated_mean_log10,
                        updated_cv_log10
                    );

                    // if ((n_step == 999) && (row == 5) && (col == 9)) {
                    //     cout << boost::format("*** updated %d %d %f %f\n")
                    //         % row % col % updated_mean_log10 % updated_cv_log10;
                    // } 


                    // at_log10_alpha_beta(
                    //     clipped_alpha, clipped_beta, n_step, HOM_STRETCH,                         
                    //     _cached_het_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 0)], 
                    //     _cached_het_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 1)]
                    // );
                    at_flat(
                        updated_mean_log10, updated_cv_log10, n_step, HOM_STRETCH, false, u, v
                    );                
                        
                    _cached_het_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 0)] = u;
                    _cached_het_site_hom_stretch_unravelled[unravel_entry(row, col, n_step, 1)] = v;
                    
                    cv_log10 += _cv_step;
                }                
                mean_log10 += _mean_step;
            }

            bar.tick();
        }

        bar.mark_as_completed();
        indicators::show_console_cursor(true);

        flatten(_cached_hom_site_hom_stretch_unravelled, _cached_hom_site_hom_stretch_flat);
        flatten(_cached_het_site_hom_stretch_unravelled, _cached_het_site_hom_stretch_flat);
    }

    void flatten(const vector<float>& unravelled, float* flat) {
        for (int n_step = 0; n_step < _n_steps; n_step++) {
            for (int row = 0; row < _mean_n_steps; row++) {
                for (int col = 0; col < _cv_n_steps; col++) {                   

                    int m0 = row;
                    if (m0 == _mean_n_steps-1) {
                        m0--;
                    }
                    int m1 = m0 + 1;
                    int c0 = col;
                    if (c0 == _cv_n_steps-1) {
                        c0--;
                    }
                    int c1 = c0 + 1;

                    float* ptr = (flat + 
                        n_step * _mean_n_steps * _cv_n_steps * 2 * 4 +          // all parts before it
                        row * _cv_n_steps * 2 * 4 +                             // rows before it
                        col * 2 * 4                                             // cols before it
                    );

                    *(ptr + 0) = unravelled[unravel_entry(m0, c0, n_step, 0)];
                    *(ptr + 1) = unravelled[unravel_entry(m0, c1, n_step, 0)];
                    *(ptr + 2) = unravelled[unravel_entry(m1, c0, n_step, 0)];
                    *(ptr + 3) = unravelled[unravel_entry(m1, c1, n_step, 0)];
                    *(ptr + 4) = unravelled[unravel_entry(m0, c0, n_step, 1)];
                    *(ptr + 5) = unravelled[unravel_entry(m0, c1, n_step, 1)];
                    *(ptr + 6) = unravelled[unravel_entry(m1, c0, n_step, 1)];
                    *(ptr + 7) = unravelled[unravel_entry(m1, c1, n_step, 1)];                    
                }                
            }
        }
    }


    void at_flat(float mean_log10, float cv_log10, int n_step, segment_type type, bool forward, float& u, float& v, bool printme = false) {  

        // TODO: Do those two in parallel      
        _m = (mean_log10 - _mean_min_log10) * _mean_step_recip;
        _c = (cv_log10 - _cv_min_log10) * _cv_step_recip;

        // _m0 = int(floor(_m));
        // _c0 = int(floor(_c));

        // TODO: Do those two in parallel
        _m0 = ftoi_sse1(_m);
        _c0 = ftoi_sse1(_c);

        

        _flat = (forward ? _lookup_forward[type] : _lookup_backward[type]);

        _ptr = (_flat + 2 * 4 * (n_step * _mean_n_steps * _cv_n_steps + _m0 * _cv_n_steps + _c0));        

        _wm = (_m - _m0);
        _wc = (_c - _c0);

        // if (printme) { 
        //     cout << boost::format("n_step = %d, _m0 = %d, _c0 = %d\n") % n_step % _m0 % _c0; 
        //     cout << boost::format("_flat = %d, vs. _cached_hom_site_hom_stretch_flat %d\n") % _flat % _cached_hom_site_hom_stretch_flat;
        //     cout << boost::format("_flat = %d, vs. _cached_hom_flat %d\n") % _flat % _cached_hom_flat;
        //     cout << boost::format("_ptr - _flat = %d\n") % (_ptr - _flat);
        //     cout << boost::format("_ptr content %f %f %f %f %f %f %f %f\n") % 
        //         _ptr[0] % _ptr[1] % _ptr[2] % _ptr[3] % _ptr[4] % _ptr[5] % _ptr[6] % _ptr[7];
        // }

        // // Fill the four grid points
        // _U00 = *(_ptr+0);
        // _U01 = *(_ptr+1);
        // _U10 = *(_ptr+2); 
        // _U11 = *(_ptr+3);        
        // _V00 = *(_ptr+4); 
        // _V01 = *(_ptr+5);
        // _V10 = *(_ptr+6); 
        // _V11 = *(_ptr+7);


        // _w00 = (1-_wm) * (1-_wc);
        // _w01 = (1-_wm) * _wc;
        // _w10 = _wm * (1-_wc);
        // _w11 = _wm * _wc;

        // u = _w00 * _U00 + _w01 * _U01 + _w10 * _U10 + _w11 * _U11;
        // v = _w00 * _V00 + _w01 * _V01 + _w10 * _V10 + _w11 * _V11;

        // AVX2 version


        // __m256 UV = _mm256_load_ps(_ptr);
        // cout << (boost::format("Us: %f %f %f %f\n") % _U00 % _U01 % _U10 % _U11);
        // cout << (boost::format("Vs: %f %f %f %f\n") % _V00 % _V01 % _V10 % _V11);

        //  cout << UV[0] << " " << UV[1] << " " << UV[2] << " " << UV[3] << " " 
        //       << UV[4] << " " << UV[5] << " " << UV[6] << " " << UV[7] << " " << endl;


        // cout << u << " / " << v << endl;
        // cout << res[0] << " " << res[1] << " " << res[2] << " " << res[3] << " " 
        //      << res[4] << " " << res[5] << " " << res[6] << " " << res[7] << " " << endl;

        // TODO: can we save something here with FMA?
        __m256 wmvec = _mm256_fmadd_ps(_mm256_set1_ps(_wm), _wm_mult, _wm_add);
        __m256 wcvec = _mm256_fmadd_ps(_mm256_set1_ps(_wc), _wc_mult, _wc_add);
        __m256 halfdots = _mm256_dp_ps(
            _mm256_load_ps(_ptr), 
            _mm256_mul_ps(
                wmvec, wcvec                
            ), 
            0xF1);

        float* res = (float*)&halfdots;

        // if (printme) {
        //     cout << boost::format("_wm _wc = %f %f\n") % _wm % _wc;
        //     cout << boost::format("res content %f %f %f %f %f %f %f %f\n") % 
        //         res[0] % res[1] % res[2] % res[3] % res[4] % res[5] % res[6] % res[7];
        // }

        u = res[0]; v = res[4];
        

        // cout << endl << "at_flat" << endl;
        // cout << (boost::format("In: %f %f %d %d %b\n") % mean_log10 % cv_log10 % n_step % type % forward);
        // cout << (boost::format("%f %f %f %f \n") % m % m0 % c % c0);
        // cout << (boost::format("Us: %f %f %f %f\n") % U00 % U01 % U10 % U11);
        // cout << (boost::format("Vs: %f %f %f %f\n") % V00 % V01 % V10 % V11);

        // int offset = 2 * 4 * (n_step * _mean_n_steps * _cv_n_steps + m0 * _cv_n_steps + c0);
        // cout << flat << " vs " << _cached_hom_stretch_hom_site_flat << endl;
        // cout << offset << endl;
        // cout << *(_cached_hom_stretch_hom_site_flat+offset+5) << endl;
        // get_unravelled(_cached_hom_stretch_hom_site_unravelled, 5, 9, n_step, U01, V01);
        // cout << V01 << endl;
    }

    void at_flat_vectorized(
        float* mean_log10_chunk, 
        float* cv_log10_chunk, 
        int32_t n_step, 
        int32_t* n_called_ptr,
        segment_type* type_chunk, 
        bool forward) {  

        //
        // First step: Missing segments
        //

        // Load
        __m256 mean_log10_v = _mm256_load_ps(mean_log10_chunk);
        __m256 cv_log10_v = _mm256_load_ps(cv_log10_chunk);

        // _m = (mean_log10 - _mean_min_log10) * _mean_step_recip;        
        __m256 _m = _mm256_fmsub_ps(mean_log10_v, _mean_step_recip_v, _mean_min_log10_times_mean_step_recip_v);

        // _c = (cv_log10 - _cv_min_log10) * _cv_step_recip;
        __m256 _c = _mm256_fmsub_ps(cv_log10_v, _cv_step_recip_v, _cv_min_log10_times_cv_step_recip_v);

        // _m0 = floor(_m);
        // _c0 = floor(_c);
        __m256 _m0 = _mm256_floor_ps(_m);
        __m256 _c0 = _mm256_floor_ps(_c);  

        // _wm = (_m - _m0);
        // _wc = (_c - _c0);
        _wm_v = _mm256_sub_ps(_m, _m0);
        _wc_v = _mm256_sub_ps(_c, _c0);

        __m256i n_missing = _mm256_sub_epi32(_mm256_set1_epi32(n_step), _mm256_load_si256((__m256i*) n_called_ptr));

        // shifts = 2 * 4 * (n_missing * _mean_n_steps * _cv_n_steps + _m0 * _cv_n_steps + _c0)
        __m256i shifts_missing = _mm256_add_epi32(_mm256_add_epi32(
            _mm256_mullo_epi32(_mm256_sub_epi32(n_missing, _mm256_set1_epi32(1)), _shift_n_step_coef),
            _mm256_mullo_epi32(_mm256_cvtps_epi32(_m0), _shift_m0_coef)),
            _mm256_mullo_epi32(_mm256_cvtps_epi32(_c0), _shift_c0_coef)
        );


        for (int i = 0; i < parallel_vector_size; i++) {
            // If missing steps is 0, do nothing
            if (((int32_t*) (&n_missing))[i] == 0) {
                continue;
            }

            // _flat = (forward ? _lookup_forward[type] : _lookup_backward[type]);

            // This is always a missing stretch
            _flat = _cached_missing_flat;

            //_ptr = (_flat + 2 * 4 * (n_step * _mean_n_steps * _cv_n_steps + _m0 * _cv_n_steps + _c0));
            _ptr = _flat + ((int32_t*) (&shifts_missing))[i];

            _wm = ((float*) (&_wm_v))[i];
            _wc = ((float*) (&_wc_v))[i];

            // TODO: can we save something here with FMA?
            _wmvec = _mm256_fmadd_ps(_mm256_set1_ps(_wm), _wm_mult, _wm_add);
            _wcvec = _mm256_fmadd_ps(_mm256_set1_ps(_wc), _wc_mult, _wc_add);
            _halfdots = _mm256_dp_ps(
                _mm256_load_ps(_ptr), 
                _mm256_mul_ps(
                    _wmvec, _wcvec                
                ), 
                0xF1);

            float* res = (float*)&_halfdots;

            *(mean_log10_chunk+i) = res[0]; 
            *(cv_log10_chunk+i) = res[4];
        }

        // 
        // Second step: Hom stretches, with hom/het/missing emission
        //
        mean_log10_v = _mm256_load_ps(mean_log10_chunk);
        cv_log10_v = _mm256_load_ps(cv_log10_chunk);

        // _m = (mean_log10 - _mean_min_log10) * _mean_step_recip;        
        _m = _mm256_fmsub_ps(mean_log10_v, _mean_step_recip_v, _mean_min_log10_times_mean_step_recip_v);

        // _c = (cv_log10 - _cv_min_log10) * _cv_step_recip;
        _c = _mm256_fmsub_ps(cv_log10_v, _cv_step_recip_v, _cv_min_log10_times_cv_step_recip_v);

        // _m0 = floor(_m);
        // _c0 = floor(_c);
        _m0 = _mm256_floor_ps(_m);
        _c0 = _mm256_floor_ps(_c);  

        // _wm = (_m - _m0);
        // _wc = (_c - _c0);
        _wm_v = _mm256_sub_ps(_m, _m0);
        _wc_v = _mm256_sub_ps(_c, _c0);

        __m256i n_called = _mm256_load_si256((__m256i*) n_called_ptr);

        // shifts = 2 * 4 * (n_step * _mean_n_steps * _cv_n_steps + _m0 * _cv_n_steps + _c0)
        __m256i shifts_called = _mm256_add_epi32(_mm256_add_epi32(
            _mm256_mullo_epi32(_mm256_sub_epi32(n_called, _mm256_set1_epi32(1)), _shift_n_step_coef),
            _mm256_mullo_epi32(_mm256_cvtps_epi32(_m0), _shift_m0_coef)),
            _mm256_mullo_epi32(_mm256_cvtps_epi32(_c0), _shift_c0_coef)
        );


        for (int i = 0; i < parallel_vector_size; i++) {
            // If called steps is 0, do nothing
            if (((int32_t*) (&n_called))[i] == 0) {
                continue;
            }

            // _flat = (forward ? _lookup_forward[type] : _lookup_backward[type]);

            // TODO: Make this faster
            _flat = (
                forward 
                ? _lookup_forward[*(type_chunk + i)]
                : _lookup_backward[*(type_chunk + i)]
            );

            //_ptr = (_flat + 2 * 4 * (n_step * _mean_n_steps * _cv_n_steps + _m0 * _cv_n_steps + _c0));
            _ptr = _flat + ((int32_t*) (&shifts_called))[i];

            _wm = ((float*) (&_wm_v))[i];
            _wc = ((float*) (&_wc_v))[i];

            // TODO: can we save something here with FMA?
            _wmvec = _mm256_fmadd_ps(_mm256_set1_ps(_wm), _wm_mult, _wm_add);
            _wcvec = _mm256_fmadd_ps(_mm256_set1_ps(_wc), _wc_mult, _wc_add);
            _halfdots = _mm256_dp_ps(
                _mm256_load_ps(_ptr), 
                _mm256_mul_ps(
                    _wmvec, _wcvec                
                ), 
                0xF1);

            float* res = (float*)&_halfdots;

            *(mean_log10_chunk+i) = res[0]; 
            *(cv_log10_chunk+i) = res[4];
        }
    }

};